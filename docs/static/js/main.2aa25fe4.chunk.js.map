{"version":3,"sources":["constants.js","components/DataForm.js","components/CommonCharts.js","components/ChartView.js","components/ProjectTable.js","utils.js","components/ProjectView.js","functions/utils.js","App.js","store/actions/index.js","store/action-types.js","store/reducers/index.js","store/reducers/all-categories.js","store/reducers/all-areas.js","store/index.js","index.js"],"names":["KEY_REPORT_TIME","KEY_PROJECT_NAME","KEY_STATISTIC_ITEM","KEY_TICKET_TOTAL","RATE_STATISTIC_ITEMS","COL_AREA","COL_CITY_COMPANY","COL_PROJECT","COL_PROJECT_STAGE","COL_REPORT_TIME","COL_DUTY_WORKER","TICKET_STATUS","CATEGORIES","STATISTIC_ITEMS","DataForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","compareToStartDate","rule","value","callback","form","getFieldValue","compareToEndDate","state","fileList","startStatistic","bind","assertThisInitialized","_this2","Promise","resolve","reject","validateFields","err","values","_this3","validateForm","then","startTime","Date","set","hour","minute","second","endTime","onStart","catch","_this4","getFieldDecorator","react_default","a","createElement","es_form","layout","row","es_col","span","Item","label","labelCol","wrapperCol","rules","required","message","upload","accept","multiple","beforeUpload","file","setState","_ref","concat","toConsumableArray","onRemove","_ref2","index","indexOf","newFileList","slice","splice","es_button","validator","date_picker","offset","loading","type","onClick","React","Component","defaultPorps","WrapDataForm","create","titleConfig","left","top","textStyle","color","toolboxConfig","feature","saveAsImage","show","right","legendConfig","styles","margin","height","tooltipConifg","trigger","axisPointer","crossStyle","CommonCharts","core_default","style","echarts","option","title","objectSpread","text","title1","tooltip","toolbox","xAxis","data","interval","axisLabel","rotate","yAxis","name","min","max","series","barMaxWidth","position","formatter","graphData","totalAcceptData","yAxisIndex","overallCloseRateData","title2","newAddedAcceptData","newAddedCloseRateData","title5","radius","openData","title3","legend","needHandleAcceptData","needHandleCloseOnTimeRateData","needHandleCloseRateData","title4","closeAverageHandleTimeData","openAverageHandleTimeData","ChartView","cityCategoryCloseAverageHandleTimeSeries","newAddedCities","cityName","cityGraphData","cityCategoryCloseAverageHandleTimeData","citySecondCategoryOpenAverageHandleTimeSeries","openAverageHandleTimeCities","citySecondCategoryOpenAverageHandleTimeData","components_CommonCharts","areaGraphData","allAreas","categoryGraphData","allCategories","allCities","projectGraphData","allProjects","stageGraphData","allStages","ProjectTable","projectColumn","table","Column","dataIndex","key","width","otherColumns","map","item","filter","filteredProjects","length","filteredItems","currentPageData","dataSource","pagination","pageSize","scroll","y","size","defaultProps","formatToTable","tableData","rowKey","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","statisticItem","rowData","_i","_arr","category","push","return","formatToRateTable","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_i2","_arr2","ProjectView","filterProjects","projects","filterItems","items","exportData","header","sheet1","XLSX","utils","json_to_sheet","periodNewAddedResult","sheet2","thisYearBeforePeriodResult","sheet3","thisYearBeforePeriodTotalResult","sheet4","thisYearTotalResult","sheet5","lastYearBeforePeriodResult","sheet6","lastYearBeforePeriodTotalResult","sheet7","beforePeriodNeedHandleResult","sheet8","periodTotalResult","sheet9","rateResult","workbook","book_new","book_append_sheet","writeFile","moment","now","format","es_select","mode","onChange","project","Option","components_ProjectTable","initStatisticItem","itemName","initRate","getCategory","ticket","getItem","colContent","statisticCloseHandleTime","ticketStatistic","ticketCloseTime","ticketReportTime","ticketPauseDuration","closeHandleTime","duration","diff","subtract","as","statisticOpenHandleTime","closeEndTime","openHandleTime","statisticRate","statisticMap","rateMap","toFixed","statistc","periodTickets","beforePeriodTickets","thisYearTotalTickets","lastYearBeforePeriodTickets","col","allItems","yearStartTime","month","date","tickets","closeStartTime","dataMap","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","ticketCategory","ticketStatus","ticketResponseAlarm","ticketReplyAlarm","Number","ticketReopenCount","window","alert","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","ticketCloseCount","ticketCloseProcessTime","ticketOpenProcessTime","ticketOpenCount","statisticPeriodNewAddedTickets","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","statisticThisYearBeforePeriodTickets","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","statisticThisYearBeforePeriodTotalTickets","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","statisticLastYearBeforePeriodTickets","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","statisticLastYearBeforePeriodTotalTickets","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","statisticThisYearTotalTickets","array","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_iterator28","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","result","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","statisticBeforePeriodNeedHandleResult","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","statisticPeriodTotalResult","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","formatGraphData","_iteratorNormalCompletion35","_didIteratorError35","_iteratorError35","_step35","_iterator35","formatCategoryGraphData","area","_iteratorNormalCompletion36","_didIteratorError36","_iteratorError36","_step36","_iterator36","App","start","addCategories","fileReader","FileReader","readFile","onload","event","read","target","sheet","Sheets","SheetNames","sheet_to_json","blankrows","readAsBinaryString","readExcelData","allWorkers","stage","Util","city","worker","reportTime","workerData","stageData","projectData","cityData","areaData","className","components_DataForm","tabs","TabPane","tab","components_ChartView","components_ProjectView","mapDispatchToProps","categories","payload","ConnectedApp","connect","reducer","combineReducers","arguments","action","areas","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","locale_provider","locale","zh_CN","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2aa25fe4.chunk.js","sourcesContent":["// statistic items\r\nexport const TICKET_SYSTEM_COUNT = '系统单数';\r\nexport const TICKET_ACCEPT = '受理';\r\nexport const TICKET_OPEN = '剩余未关';\r\nexport const TICKET_VALIDATE = '待复验';\r\nexport const TICKET_PAUSE = '暂停处理';\r\nexport const TICKET_INVALID = '无效';\r\nexport const TICKET_CLOSE = '关闭';\r\nexport const TICKET_REOPEN_COUNT = '重新打开次数';\r\nexport const TICKET_CLOSE_NORMAL = '正常关闭';\r\nexport const TICKET_CLOSE_ABNORMAL = '非正常关闭';\r\nexport const TICKET_CLOSE_ON_TIME = '及时关闭';\r\nexport const TICKET_RESPONSE_IN_30_MIN = '响应及时单（0.5h）';\r\nexport const TICKET_RESPONSE_IN_30_HOUR = '响应及时单（30h）';\r\nexport const TICKET_CLOSE_PROCESS_TIME = '已关时长（天）';\r\nexport const TICKET_OPEN_PROCESS_TIME = '未关时长（天）';\r\nexport const TICKET_NOT_RESPONSED = '未响应';\r\nexport const TICKET_NOT_REPLY = '未回复';\r\nexport const TICKET_REPLY_OVER_48 = '回复超时';\r\nexport const TICKET_CLOSE_HANDLE_TIME_0_7 = '已关处理时长（0-7天）';\r\nexport const TICKET_CLOSE_HANDLE_TIME_7_15 = '已关处理时长（7-15天）';\r\nexport const TICKET_CLOSE_HANDLE_TIME_15_30 = '已关处理时长（15-30天）';\r\nexport const TICKET_CLOSE_HANDLE_TIME_30_60 = '已关处理时长（30-60天）';\r\nexport const TICKET_CLOSE_HANDLE_TIME_OVER_60 = '已关处理时长（大于60天）';\r\nexport const TICKET_OPEN_HANDLE_TIME_0_30 = '未关处理时长（0-30天）';\r\nexport const TICKET_OPEN_HANDLE_TIME_30_40 = '未关处理时长（30-40天）';\r\nexport const TICKET_OPEN_HANDLE_TIME_40_50 = '未关处理时长（40-50天）';\r\nexport const TICKET_OPEN_HANDLE_TIME_50_60 = '未关处理时长（50-60天）';\r\nexport const TICKET_OPEN_HANDLE_TIME_OVER_60 = '未关处理时长（大于60天）';\r\n\r\n// data key\r\nexport const KEY_REPORT_TIME = '报事时间';\r\nexport const KEY_PROJECT_NAME = '项目';\r\nexport const KEY_SECOND_CATEGORY = '二级分类';\r\nexport const KEY_TICKET_STATUS = '工单状态';\r\nexport const KEY_IS_PROCESS_EXCCED = '是否超期处理';\r\nexport const KEY_FIRST_RESPONSE_TIME = '首次响应时长';\r\nexport const KEY_PROCESS_TIME = '处理时长';\r\nexport const KEY_CLOSE_TIME = '实际关闭时间';\r\nexport const KEY_STATISTIC_ITEM = '统计项目';\r\nexport const KEY_TICKET_TOTAL = '合计';\r\nexport const KEY_CITY_NAME = '城市';\r\n\r\nexport const NEW_ADD_CLOSE_RATE = '新增关闭率';\r\nexport const REMAIN_CLOSE_RATE = '遗留关闭率';\r\nexport const OVERALL_CLOSE_RATE = '总体关闭率';\r\nexport const RESPONSE_IN_30_MIN_RATE = '响应及时率（0.5h）'\r\nexport const RESPONSE_IN_30_HOUR_RATE = '响应及时率（30h）';\r\nexport const CLOSE_ON_TIME_RATE = '及时关闭率';\r\nexport const TOTAL_OVERALL_CLOSE_RATE = '累计总体关闭率';\r\n\r\nexport const RATE_STATISTIC_ITEMS = [\r\n  REMAIN_CLOSE_RATE,\r\n  NEW_ADD_CLOSE_RATE,\r\n  OVERALL_CLOSE_RATE,\r\n  CLOSE_ON_TIME_RATE,\r\n  TOTAL_OVERALL_CLOSE_RATE\r\n];\r\n\r\nexport const STATISTIC_PERIOD_ADD = '本年度统计周期内新增';\r\nexport const STATISTIC_BEFORE_PERIOD_REMAIN = '本年度截止统计周期前遗留';\r\nexport const STATISTIC_BEFORE_PERIOD_REMAIN_TOTAL = '本年度截止统计周期前遗留累计';\r\nexport const STATISTIC_THIS_YEAR_TOTAL = '本年度累计';\r\nexport const STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN = '上年度截至统计周期前遗留';\r\nexport const STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN_TOTAL = '上年度截至统计周期前遗留累计';\r\nexport const STATISTIC_BEFORE_PERIOD_NEED_HANDLE = '截至本年度统计周期内需处理';\r\nexport const STATISTIC_BEFORE_PERIOD_TOTAL = '截至本年度统计周期累计';\r\nexport const STATISTIC_PERIOD_RATE = '本年度统计周期内';\r\n\r\n\r\n// new data key\r\nexport const COL_AREA = '大区';\r\nexport const COL_CITY_COMPANY = '城市公司';\r\nexport const COL_PROJECT = '项目';\r\nexport const COL_PROJECT_STAGE = '分期';\r\nexport const COL_CURRENT_STATUS = '工单状态';\r\nexport const COL_CATEGORY = '问题分类';\r\nexport const COL_REPORT_TIME = '受理时间';\r\nexport const COL_RESPONSE_ALARM_LEVEL = '响应预警消息';\r\nexport const COL_REPLY_ALARM_LEVEL = '回复预警等级';\r\nexport const COL_RESPONSE_TIME = '响应时间';\r\nexport const COL_FINISH_TIME = '实际完成时间';\r\nexport const COL_TOTAL_HANDLE_TIME = '工单总处理时长(天）';\r\nexport const COL_EXPIRE = '总时长超时预警';\r\nexport const COL_CLOSE_TIME = '关闭时间';\r\nexport const COL_PAUSE = '累计暂停时长';\r\nexport const COL_OVERTIME_WARN = '总时长超时预警';\r\nexport const COL_DUTY_WORKER = '责任人';\r\nexport const CONTENT_UNKNOWN = '空白';\r\nexport const COL_REPLY_ALARM_MSG = '回复预警消息';\r\nexport const COL_REOPEN_COUNT = '重新打开次数';\r\n\r\nexport const CATEGORY_UNCLASSIFY = '未分类';\r\n\r\nexport const OVER_48_HOUR_NO_REPLY_ALARM = '超过48小时未回复';\r\n\r\nexport const ALARM_VALUE = '无响应记录';\r\n\r\nexport const TICKET_STATUS = {\r\n  RESPONSED: '已响应',\r\n  SOLUTION_PREPARE: '方案制定中',\r\n  SOLUTION_APPROVE: '方案已批准',\r\n  INVALID_APPROVE: '无效审批中',\r\n  INVALID: '无效',\r\n  CLOSED: '已关闭',\r\n  FORCE_CLOSE: '强制关闭',\r\n  CLOSE_ABNORMAL: '非正常关闭',\r\n  DISPATCHED: '已分派',\r\n  WORK_DOING: '处理中',\r\n  COMMENTED: '已评价',\r\n  NEW: '新建',\r\n  CLOSE_APPROVING: '关闭审批中',\r\n  REPLY: '已回复'\r\n};\r\n\r\nexport const CATEGORY_SALE_MANAGEMENT = '营销管理类';\r\nexport const CATEGORY_SALE_SERVICE = '营销服务类';\r\nexport const CATEGORY_PROPERTY_MANEGEMENT = '物业管理类';\r\nexport const CATEGORY_PROPERTY_SERVICE = '物业服务类';\r\n\r\nexport const CATEGORIES = [\r\n  CATEGORY_SALE_SERVICE,\r\n  '规划设计类',\r\n  '工程质量类',\r\n  CATEGORY_PROPERTY_SERVICE,\r\n  '客户服务类',\r\n  '产证咨询类',\r\n  '投诉-其他类',\r\n  CATEGORY_UNCLASSIFY\r\n];\r\n\r\n\r\n\r\n// statistic items\r\nexport const STATISTIC_ITEMS = [\r\n  TICKET_ACCEPT,\r\n  TICKET_OPEN,\r\n  TICKET_REOPEN_COUNT,\r\n  TICKET_PAUSE,\r\n  TICKET_INVALID,\r\n  TICKET_CLOSE,\r\n  TICKET_CLOSE_NORMAL,\r\n  TICKET_CLOSE_ABNORMAL,\r\n  // TICKET_CLOSE_ON_TIME,\r\n  TICKET_NOT_RESPONSED,\r\n  // TICKET_NOT_REPLY,\r\n  TICKET_REPLY_OVER_48,\r\n  TICKET_CLOSE_PROCESS_TIME,\r\n  TICKET_OPEN_PROCESS_TIME,\r\n  TICKET_CLOSE_HANDLE_TIME_0_7,\r\n  TICKET_CLOSE_HANDLE_TIME_7_15,\r\n  TICKET_CLOSE_HANDLE_TIME_15_30,\r\n  TICKET_CLOSE_HANDLE_TIME_30_60,\r\n  TICKET_CLOSE_HANDLE_TIME_OVER_60,\r\n  TICKET_OPEN_HANDLE_TIME_0_30,\r\n  TICKET_OPEN_HANDLE_TIME_30_40,\r\n  TICKET_OPEN_HANDLE_TIME_40_50,\r\n  TICKET_OPEN_HANDLE_TIME_50_60,\r\n  TICKET_OPEN_HANDLE_TIME_OVER_60\r\n]\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Form, Upload, Button, DatePicker } from 'antd';\n\nclass DataForm extends React.Component {\n  static defaultPorps = {\n    onStart: () => {}\n  }\n  static propTypes = {\n    onStart: PropTypes.func\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileList: []\n    };\n    this.startStatistic = this.startStatistic.bind(this);\n  }\n\n  validateForm() {\n    return new Promise((resolve, reject) => {\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          resolve();\n        } else {\n          reject();\n        }\n      })\n    });\n  }\n\n  startStatistic() {\n    this.validateForm().then(() => {\n      const form = this.props.form;\n      let startTime = new Date(form.getFieldValue('startDate').set({ hour: 0, minute: 0, second: 0 }));\n      let endTime = new Date(form.getFieldValue('endDate').set({ hour: 23, minute: 59, second: 59 }));\n      this.props.onStart(this.state.fileList, startTime, endTime);\n    }).catch(() => {});\n  }\n\n  compareToStartDate = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value < form.getFieldValue('startDate')) {\n      callback('结束时间应大于开始时间!');\n    } else {\n      callback();\n    }\n  }\n\n  compareToEndDate = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value > form.getFieldValue('endDate')) {\n      callback('开始时间应小于结束时间!');\n    } else {\n      callback();\n    }\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form layout=\"horizontal\">\n        <Row>\n          <Col span={12}>\n            <Form.Item\n              label=\"请选择文件\"\n              labelCol={{ span: 8 }}\n              wrapperCol={{ span: 16 }}\n            >\n              {\n                getFieldDecorator('files', {\n                  rules: [{ required: true, message: '请选择要统计的文件!' }]\n                })(\n                  <Upload\n                    accept=\".xls,.xlsx\"\n                    multiple\n                    fileList={this.state.fileList}\n                    beforeUpload={(file) => {\n                      this.setState(({ fileList }) => {\n                        return { fileList : [...fileList, file] };\n                      });\n                      return false;\n                    }}\n                    onRemove={(file) => {\n                      this.setState(({ fileList }) => {\n                        const index = fileList.indexOf(file);\n                        const newFileList = fileList.slice();\n                        newFileList.splice(index, 1);\n                        return {\n                          fileList: newFileList\n                        };\n                      });\n                    }}\n                  >\n                    <Button>支持文件格式: .xls, .xlsx</Button>\n                  </Upload>\n                )\n              }\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={8}>\n            <Form.Item\n              label='统计周期开始时间'\n              labelCol={{ span: 12 }}\n              wrapperCol={{ span: 12 }}\n            >\n              {\n                getFieldDecorator('startDate', {\n                  rules: [\n                    { required: true, message: '请选择统计周期开始时间' },\n                    { validator: this.compareToEndDate }\n                  ]\n                })(<DatePicker />)\n              }\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item\n              label=\"统计周期结束时间\"\n              labelCol={{ span: 12 }}\n              wrapperCol={{ span: 12 }}\n            >\n              {\n                getFieldDecorator('endDate', {\n                  rules: [\n                    { required: true, message: '请选择统计周期结束时间' },\n                    { validator: this.compareToStartDate }\n                  ]\n                })(<DatePicker />)\n              }\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col offset={4}>\n            <Button loading={this.props.loading} type=\"primary\" onClick={this.startStatistic}>\n              {\n                this.props.loading ? '正在统计...': '开始统计'\n              }\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nconst WrapDataForm = Form.create()(DataForm);\n\nexport default WrapDataForm;\n","import React from 'react';\r\nimport { Row } from 'antd';\r\n// import the core library.\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\n\r\n// then import echarts modules those you have used manually.\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/bar';\r\nimport 'echarts/lib/chart/pie';\r\n// import 'echarts/lib/chart/scatter';\r\n// import 'echarts/lib/chart/radar';\r\n\r\n// import 'echarts/lib/chart/map';\r\n// import 'echarts/lib/chart/treemap';\r\n// import 'echarts/lib/chart/graph';\r\n// import 'echarts/lib/chart/gauge';\r\n// import 'echarts/lib/chart/funnel';\r\n// import 'echarts/lib/chart/parallel';\r\n// import 'echarts/lib/chart/sankey';\r\n// import 'echarts/lib/chart/boxplot';\r\n// import 'echarts/lib/chart/candlestick';\r\n// import 'echarts/lib/chart/effectScatter';\r\n// import 'echarts/lib/chart/lines';\r\n// import 'echarts/lib/chart/heatmap';\r\n\r\n// import 'echarts/lib/component/graphic';\r\n// import 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/legend';\r\nimport 'echarts/lib/component/tooltip';\r\n// import 'echarts/lib/component/polar';\r\n// import 'echarts/lib/component/geo';\r\n// import 'echarts/lib/component/parallel';\r\n// import 'echarts/lib/component/singleAxis';\r\n// import 'echarts/lib/component/brush';\r\n\r\nimport 'echarts/lib/component/title';\r\n\r\n// import 'echarts/lib/component/dataZoom';\r\n// import 'echarts/lib/component/visualMap';\r\n\r\n// import 'echarts/lib/component/markPoint';\r\n// import 'echarts/lib/component/markLine';\r\n// import 'echarts/lib/component/markArea';\r\n\r\n// import 'echarts/lib/component/timeline';\r\nimport 'echarts/lib/component/toolbox';\r\n// import { Rect } from 'echarts/lib/util/graphic';\r\n\r\n// import 'zrender/lib/vml/vml';\r\n\r\nconst titleConfig = {\r\n  left: 'center',\r\n  top: 0,\r\n  textStyle: {\r\n    color: '#000000'\r\n  }\r\n};\r\nconst toolboxConfig = {\r\n  feature: {\r\n    saveAsImage: { show: true }\r\n  },\r\n  right: 40\r\n};\r\nconst legendConfig = {\r\n  left: 40\r\n};\r\nconst styles = {\r\n  margin: '40px 0',\r\n  height: '500px'\r\n};\r\nconst tooltipConifg = {\r\n  trigger: 'axis',\r\n  axisPointer: {\r\n    type: 'cross',\r\n    crossStyle: {\r\n      color: '#999'\r\n    }\r\n  }\r\n};\r\n\r\n\r\nfunction CommonCharts(props) {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: props.title.title1,\r\n              ...titleConfig\r\n            },\r\n            tooltip: tooltipConifg,\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.xAxis,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '累计受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '关闭率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '累计受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#333',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.totalAcceptData\r\n              },\r\n              {\r\n                name: '关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.overallCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n\r\n      <Row>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: props.title.title2,\r\n              ...titleConfig\r\n            },\r\n            tooltip: tooltipConifg,\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.xAxis,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '新增受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '关闭率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '新增受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#000',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.newAddedAcceptData\r\n              },\r\n              {\r\n                name: '关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.newAddedCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n\r\n      <Row>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: props.title.title5,\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{b}:{c}({d}%)'\r\n            },\r\n            toolbox: toolboxConfig,\r\n            series: [\r\n              {\r\n                name: '剩余未关',\r\n                type: 'pie',\r\n                radius: '60%',\r\n                label: {\r\n                  formatter: '{b}:{c}({d}%)',\r\n                  color: '#000'\r\n                },\r\n                data: props.graphData.openData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n\r\n      <Row>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: props.title.title3,\r\n              ...titleConfig\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                type: 'cross',\r\n                crossStyle: {\r\n                  color: '#999'\r\n                }\r\n              }\r\n            },\r\n            toolbox: toolboxConfig,\r\n            legend: {\r\n              data: ['需处理受理', '及时关闭率', '总体关闭率'],\r\n              ...legendConfig\r\n            },\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.xAxis,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '需处理受理'\r\n              },\r\n              {\r\n                type: 'value',\r\n                name: '比率',\r\n                min: 0,\r\n                max: 1\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: '需处理受理',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#000',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.needHandleAcceptData\r\n              },\r\n              {\r\n                name: '及时关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.needHandleCloseOnTimeRateData\r\n              },\r\n              {\r\n                name: '总体关闭率',\r\n                type: 'line',\r\n                yAxisIndex: 1,\r\n                label: {\r\n                  show: true,\r\n                  color: '#000',\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.needHandleCloseRateData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n\r\n      <Row style={{ margin: '40px 0' }}>\r\n        <ReactEchartsCore\r\n          style={styles}\r\n          echarts={echarts}\r\n          option={{\r\n            title: {\r\n              text: props.title.title4,\r\n              ...titleConfig\r\n            },\r\n            tooltip: tooltipConifg,\r\n            toolbox: toolboxConfig,\r\n            xAxis: [\r\n              {\r\n                type: 'category',\r\n                data: props.xAxis,\r\n                axisPointer: {\r\n                  type: 'shadow'\r\n                },\r\n                interval: 0,\r\n                axisLabel: {\r\n                  rotate: 45\r\n                }\r\n              },\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'value',\r\n                name: '处理时长（天）'\r\n              },\r\n            ],\r\n            legend: {\r\n              data: ['已关闭', '剩余未关'],\r\n              ...legendConfig\r\n            },\r\n            series: [\r\n              {\r\n                name: '已关闭',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#333',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.closeAverageHandleTimeData\r\n              },\r\n              {\r\n                name: '剩余未关',\r\n                type: 'bar',\r\n                barMaxWidth: 20,\r\n                label: {\r\n                  position: 'top',\r\n                  color: '#333',\r\n                  show: true,\r\n                  formatter: '{c}'\r\n                },\r\n                data: props.graphData.openAverageHandleTimeData\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommonCharts;\r\n","import React from 'react';\r\nimport { Row } from 'antd';\r\n// import the core library.\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\n\r\n// then import echarts modules those you have used manually.\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/bar';\r\nimport 'echarts/lib/chart/pie';\r\n// import 'echarts/lib/chart/scatter';\r\n// import 'echarts/lib/chart/radar';\r\n\r\n// import 'echarts/lib/chart/map';\r\n// import 'echarts/lib/chart/treemap';\r\n// import 'echarts/lib/chart/graph';\r\n// import 'echarts/lib/chart/gauge';\r\n// import 'echarts/lib/chart/funnel';\r\n// import 'echarts/lib/chart/parallel';\r\n// import 'echarts/lib/chart/sankey';\r\n// import 'echarts/lib/chart/boxplot';\r\n// import 'echarts/lib/chart/candlestick';\r\n// import 'echarts/lib/chart/effectScatter';\r\n// import 'echarts/lib/chart/lines';\r\n// import 'echarts/lib/chart/heatmap';\r\n\r\n// import 'echarts/lib/component/graphic';\r\n// import 'echarts/lib/component/grid';\r\nimport 'echarts/lib/component/legend';\r\nimport 'echarts/lib/component/tooltip';\r\n// import 'echarts/lib/component/polar';\r\n// import 'echarts/lib/component/geo';\r\n// import 'echarts/lib/component/parallel';\r\n// import 'echarts/lib/component/singleAxis';\r\n// import 'echarts/lib/component/brush';\r\n\r\nimport 'echarts/lib/component/title';\r\n\r\n// import 'echarts/lib/component/dataZoom';\r\n// import 'echarts/lib/component/visualMap';\r\n\r\n// import 'echarts/lib/component/markPoint';\r\n// import 'echarts/lib/component/markLine';\r\n// import 'echarts/lib/component/markArea';\r\n\r\n// import 'echarts/lib/component/timeline';\r\nimport 'echarts/lib/component/toolbox';\r\n// import { Rect } from 'echarts/lib/util/graphic';\r\n\r\n// import 'zrender/lib/vml/vml';\r\n\r\nimport Charts from './CommonCharts';\r\n\r\nfunction ChartView(props) {\r\n\r\n  let cityCategoryCloseAverageHandleTimeSeries = [];\r\n  let newAddedCities = [];\r\n  for (let cityName in props.cityGraphData.cityCategoryCloseAverageHandleTimeData) {\r\n    newAddedCities = [\r\n      ...newAddedCities, cityName\r\n    ];\r\n    cityCategoryCloseAverageHandleTimeSeries = [\r\n      ...cityCategoryCloseAverageHandleTimeSeries,\r\n      {\r\n        name: cityName,\r\n        type: 'bar',\r\n        barMaxWidth: 20,\r\n        label: {\r\n          position: 'top',\r\n          color: '#333',\r\n          show: true,\r\n          formatter: '{c}'\r\n        },\r\n        data: props.cityGraphData.cityCategoryCloseAverageHandleTimeData[cityName]\r\n      }\r\n    ];\r\n  }\r\n\r\n  let citySecondCategoryOpenAverageHandleTimeSeries = [];\r\n  let openAverageHandleTimeCities = [];\r\n  for (let cityName in props.citySecondCategoryOpenAverageHandleTimeData) {\r\n    openAverageHandleTimeCities = [\r\n      ...openAverageHandleTimeCities, cityName\r\n    ];\r\n    citySecondCategoryOpenAverageHandleTimeSeries = [\r\n      ...citySecondCategoryOpenAverageHandleTimeSeries,\r\n      {\r\n        name: cityName,\r\n        type: 'bar',\r\n        barMaxWidth: 20,\r\n        label: {\r\n          position: 'top',\r\n          color: '#333',\r\n          show: true,\r\n          formatter: '{c}'\r\n        },\r\n        data: props.citySecondCategoryOpenAverageHandleTimeData[cityName]\r\n      }\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Charts graphData={props.areaGraphData} xAxis={props.allAreas}\r\n        title={{\r\n          title1: \"大区总体关闭率\",\r\n          title2: \"大区新增关闭率\",\r\n          title3: \"大区需处理关闭率\",\r\n          title4: \"大区新增平均处理时长\",\r\n          title5: \"大区剩余未关分布图\",\r\n        }}\r\n      />\r\n      <Charts graphData={props.categoryGraphData} xAxis={props.allCategories}\r\n        title={{\r\n          title1: \"分类日常总体关闭率\",\r\n          title2: \"分类新增关闭率\",\r\n          title3: \"分类需处理关闭率\",\r\n          title4: \"分类新增平均处理时长\",\r\n          title5: \"分类剩余未关分布图\",\r\n        }}\r\n      />\r\n      <Charts graphData={props.cityGraphData} xAxis={props.allCities}\r\n        title={{\r\n          title1: \"各城市日常总体关闭率\",\r\n          title2: \"各城市新增关闭率\",\r\n          title3: \"各城市需处理关闭率\",\r\n          title4: \"各城市新增平均处理时长\",\r\n          title5: \"各城市剩余未关分布图\",\r\n        }}\r\n      />\r\n      <Charts graphData={props.projectGraphData} xAxis={props.allProjects}\r\n        title={{\r\n          title1: \"各项目日常总体关闭率\",\r\n          title2: \"各项目新增关闭率\",\r\n          title3: \"各项目需处理关闭率\",\r\n          title4: \"各项目新增平均处理时长\",\r\n          title5: \"各项目剩余未关分布图\",\r\n        }}\r\n      />\r\n      <Charts graphData={props.stageGraphData} xAxis={props.allStages}\r\n        title={{\r\n          title1: \"各项目分期日常总体关闭率\",\r\n          title2: \"各项目分期新增关闭率\",\r\n          title3: \"各项目分期需处理关闭率\",\r\n          title4: \"各项目分期新增平均处理时长\",\r\n          title5: \"各项目分期剩余未关分布图\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartView;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\nimport {\r\n  KEY_PROJECT_NAME,\r\n  KEY_STATISTIC_ITEM,\r\n  CATEGORIES,\r\n  KEY_TICKET_TOTAL\r\n} from '../constants';\r\n\r\nfunction ProjectTable(props) {\r\n  const projectColumn = (\r\n    <Table.Column\r\n      dataIndex={KEY_PROJECT_NAME}\r\n      title=\"名称\"\r\n      key={KEY_PROJECT_NAME}\r\n      width={300}\r\n    />\r\n  );\r\n\r\n  const otherColumns = [KEY_STATISTIC_ITEM,\r\n    ...CATEGORIES, KEY_TICKET_TOTAL].map((item) => (\r\n    <Table.Column\r\n      dataIndex={item}\r\n      title={item}\r\n      key={item}\r\n      width={300}\r\n    />\r\n  ));\r\n\r\n  let data = props.data.filter(item => {\r\n    if (props.filteredProjects.length > 0 && props.filteredItems.length > 0) {\r\n      return props.filteredProjects.indexOf(item[KEY_PROJECT_NAME]) !== -1 &&\r\n        props.filteredItems.indexOf(item[KEY_STATISTIC_ITEM]) !== -1;\r\n    } else if (props.filteredProjects.length === 0 && props.filteredItems.length > 0) {\r\n      return props.filteredItems.indexOf(item[KEY_STATISTIC_ITEM]) !== -1;\r\n    } else if (props.filteredProjects.length > 0 && props.filteredItems.length === 0) {\r\n      return props.filteredProjects.indexOf(item[KEY_PROJECT_NAME]) !== -1;\r\n    } else {\r\n      return true;\r\n    }\r\n  });\r\n  return (\r\n    <Table\r\n      title={(currentPageData) => { return props.title }}\r\n      dataSource={data}\r\n      pagination={{ pageSize: 50 }}\r\n      scroll={{ y: 400 }}\r\n      size='small'\r\n    >\r\n      {projectColumn}\r\n      {otherColumns}\r\n    </Table>\r\n  );\r\n}\r\n\r\nProjectTable.defaultProps = {\r\n  filteredProjects: []\r\n}\r\n\r\nexport default ProjectTable;\r\n","import {\r\n  KEY_TICKET_TOTAL,\r\n  NEW_ADD_CLOSE_RATE,\r\n  REMAIN_CLOSE_RATE,\r\n  OVERALL_CLOSE_RATE,\r\n  RESPONSE_IN_30_MIN_RATE,\r\n  RESPONSE_IN_30_HOUR_RATE,\r\n  CLOSE_ON_TIME_RATE,\r\n  TOTAL_OVERALL_CLOSE_RATE,\r\n  KEY_PROJECT_NAME,\r\n  KEY_STATISTIC_ITEM,\r\n  STATISTIC_ITEMS,\r\n  DEFAULT_SECOND_CATEGORIES,\r\n  CATEGORIES,\r\n  RATE_STATISTIC_ITEMS\r\n} from './constants';\r\n\r\nimport XLSX from 'xlsx';\r\n\r\nexport function filterProjectName(projectName) {\r\n  let reg = /\\(.*?\\)|（.*?）/;\r\n  let sub = projectName.match(reg);\r\n  if (sub) {\r\n    let newName = projectName.substring(0, projectName.indexOf(sub));\r\n    return newName;\r\n  } else {\r\n    return projectName;\r\n  }\r\n}\r\n\r\nexport function parseTime(timeString) {\r\n  let time = timeString.match(/\\d+/g);\r\n  let day = 0, hour = 0, min = 0;\r\n  if (time && time.length > 0) {\r\n    day = window.parseInt(time[0]);\r\n    hour = window.parseInt(time[1]);\r\n    min = window.parseInt(time[2]);\r\n  }\r\n  return { day, hour, min };\r\n}\r\n\r\nexport function filterProject(projectName, reg) {\r\n  let sub = projectName.match(reg);\r\n  if (sub) {\r\n    let newName = projectName.substring(0, projectName.indexOf(sub));\r\n    return newName;\r\n  } else {\r\n    return projectName;\r\n  }\r\n}\r\n\r\nexport function formatToTable(data) {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let name in data) {\r\n    for (let statisticItem of STATISTIC_ITEMS) {\r\n      let rowData = {};\r\n      rowKey++;\r\n      rowData.key = rowKey;\r\n      rowData[KEY_PROJECT_NAME] = name;\r\n      rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n      for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n        rowData[category] = data[name][category][statisticItem]\r\n      }\r\n      tableData.push(rowData);\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n\r\nexport function formatToRateTable(data) {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let name in data) {\r\n    for (let statisticItem of RATE_STATISTIC_ITEMS) {\r\n      let rowData = {};\r\n      rowKey++;\r\n      rowData.key = rowKey;\r\n      rowData[KEY_PROJECT_NAME] = name;\r\n      rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n      for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n        rowData[category] = data[name][category][statisticItem]\r\n      }\r\n      tableData.push(rowData);\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n\r\nexport function formatToAreaTable(data) {\r\n  let tableData = [];\r\n  var rowKey = 0;\r\n  for (let statisticItem of STATISTIC_ITEMS) {\r\n    let rowData = {};\r\n    rowKey++;\r\n    rowData.key = rowKey;\r\n    rowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n    for (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n      rowData[category] = data[category][statisticItem]\r\n    }\r\n    tableData.push(rowData);\r\n  }\r\n  return tableData;\r\n}\r\n\r\nexport function readExcelData (fileList) {\r\n  return new Promise((resolve, reject) => {\r\n    let fileReader = new FileReader();\r\n    let data = [];\r\n\r\n    let readFile = (index) => {\r\n      if (index < fileList.length) {\r\n        fileReader.onload = (event) => {\r\n          let workbook = XLSX.read(event.target.result, { type: 'binary' });\r\n          let sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n          data = [...data, ...XLSX.utils.sheet_to_json(sheet, { blankrows: false })];\r\n          readFile(index + 1);\r\n        }\r\n        fileReader.readAsBinaryString(fileList[index]);\r\n      } else {\r\n        resolve(data);\r\n      }\r\n    };\r\n    readFile(0);\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, Select, Button } from 'antd';\r\nimport ProjectTable from './ProjectTable';\r\nimport {\r\n  STATISTIC_PERIOD_ADD,\r\n  STATISTIC_BEFORE_PERIOD_REMAIN,\r\n  STATISTIC_BEFORE_PERIOD_REMAIN_TOTAL,\r\n  STATISTIC_THIS_YEAR_TOTAL,\r\n  STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN,\r\n  STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN_TOTAL,\r\n  STATISTIC_BEFORE_PERIOD_NEED_HANDLE,\r\n  STATISTIC_BEFORE_PERIOD_TOTAL,\r\n  STATISTIC_PERIOD_RATE,\r\n  CATEGORIES,\r\n  KEY_PROJECT_NAME,\r\n  KEY_STATISTIC_ITEM,\r\n  KEY_TICKET_TOTAL,\r\n  STATISTIC_ITEMS\r\n} from '../constants';\r\nimport {\r\n  formatToTable,\r\n  formatToRateTable\r\n} from '../utils';\r\nimport XLSX from 'xlsx';\r\nimport moment from 'moment';\r\n\r\nclass ProjectView extends React.Component {\r\n  static defaultProps = {\r\n    data: {},\r\n    projects: [],\r\n    items: STATISTIC_ITEMS,\r\n    name: 'statistic'\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filteredProjects: [],\r\n      filteredItems: [],\r\n      loading: false\r\n    }\r\n    this.exportData = this.exportData.bind(this);\r\n  }\r\n\r\n  filterProjects = (projects) => {\r\n    this.setState({\r\n      filteredProjects: projects.length > 0 ? projects : []\r\n    })\r\n  }\r\n\r\n  filterItems = (items) => {\r\n    this.setState({\r\n      filteredItems: items.length > 0 ? items : []\r\n    });\r\n  }\r\n\r\n  exportData() {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    let header = [KEY_PROJECT_NAME, KEY_STATISTIC_ITEM, ...CATEGORIES, KEY_TICKET_TOTAL];\r\n    let sheet1 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.periodNewAddedResult), {\r\n      header: header\r\n    });\r\n    let sheet2 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.thisYearBeforePeriodResult), {\r\n      header: header\r\n    });\r\n    let sheet3 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.thisYearBeforePeriodTotalResult), {\r\n      header: header\r\n    });\r\n    let sheet4 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.thisYearTotalResult), {\r\n      header: header\r\n    });\r\n    let sheet5 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.lastYearBeforePeriodResult), {\r\n      header: header\r\n    });\r\n    let sheet6 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.lastYearBeforePeriodTotalResult), {\r\n      header: header\r\n    });\r\n    let sheet7 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.beforePeriodNeedHandleResult), {\r\n      header: header\r\n    });\r\n    let sheet8 = XLSX.utils.json_to_sheet(formatToTable(this.props.data.periodTotalResult), {\r\n      header: header\r\n    });\r\n    let sheet9 = XLSX.utils.json_to_sheet(formatToRateTable(this.props.data.rateResult), {\r\n      header: header\r\n    });\r\n    let workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, sheet1, STATISTIC_PERIOD_ADD);\r\n    XLSX.utils.book_append_sheet(workbook, sheet2, STATISTIC_BEFORE_PERIOD_REMAIN);\r\n    XLSX.utils.book_append_sheet(workbook, sheet3, STATISTIC_BEFORE_PERIOD_REMAIN_TOTAL);\r\n    XLSX.utils.book_append_sheet(workbook, sheet4, STATISTIC_THIS_YEAR_TOTAL);\r\n    XLSX.utils.book_append_sheet(workbook, sheet5, STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN);\r\n    XLSX.utils.book_append_sheet(workbook, sheet6, STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN_TOTAL);\r\n    XLSX.utils.book_append_sheet(workbook, sheet7, STATISTIC_BEFORE_PERIOD_NEED_HANDLE);\r\n    XLSX.utils.book_append_sheet(workbook, sheet8, STATISTIC_BEFORE_PERIOD_TOTAL);\r\n    XLSX.utils.book_append_sheet(workbook, sheet9, STATISTIC_PERIOD_RATE)\r\n    XLSX.writeFile(workbook, this.props.name + '-' + moment(Date.now()).format('YYYY-MM-DD-HH-MM-SS') + '.xlsx')\r\n    this.setState({\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <Row>\r\n            <Col span={16}>\r\n              <Form.Item\r\n                label='请选择要过滤的项目'\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 16 }}\r\n              >\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: '100%' }}\r\n                  onChange={this.filterProjects}\r\n                >\r\n                  {\r\n                    this.props.projects.map((project) => (\r\n                      <Select.Option key={project}>{project}</Select.Option>\r\n                    ))\r\n                  }\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button loading={this.state.loading} onClick={this.exportData}>导出数据</Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={16}>\r\n              <Form.Item\r\n                label=\"请选择要过滤的统计项目\"\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 16 }}\r\n              >\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: '100%' }}\r\n                  onChange={this.filterItems}\r\n                >\r\n                  {\r\n                    this.props.items.map((item) => (\r\n                      <Select.Option key={item}>{item}</Select.Option>\r\n                    ))\r\n                  }\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        <Row>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_PERIOD_ADD}\r\n              data={formatToTable(this.props.data.periodNewAddedResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_NEED_HANDLE}\r\n              data={formatToTable(this.props.data.beforePeriodNeedHandleResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_REMAIN}\r\n              data={formatToTable(this.props.data.thisYearBeforePeriodResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_REMAIN_TOTAL}\r\n              data={formatToTable(this.props.data.thisYearBeforePeriodTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_THIS_YEAR_TOTAL}\r\n              data={formatToTable(this.props.data.thisYearTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN}\r\n              data={formatToTable(this.props.data.lastYearBeforePeriodResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_LAST_YEAR_BEFORE_PERIOD_REMAIN_TOTAL}\r\n              data={formatToTable(this.props.data.lastYearBeforePeriodTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_BEFORE_PERIOD_TOTAL}\r\n              data={formatToTable(this.props.data.periodTotalResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '20px 0' }}>\r\n            <ProjectTable\r\n              title={STATISTIC_PERIOD_RATE}\r\n              data={formatToRateTable(this.props.data.rateResult)}\r\n              filteredProjects={this.state.filteredProjects}\r\n              filteredItems={this.state.filteredItems}\r\n            />\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectView;\r\n","import {\r\n\tCOL_REPORT_TIME,\r\n\tCOL_OVERTIME_WARN,\r\n\tCOL_CATEGORY,\r\n\tCOL_CURRENT_STATUS,\r\n\tCOL_PAUSE,\r\n\tCOL_CLOSE_TIME,\r\n\tCOL_REOPEN_COUNT,\r\n\tCOL_REPLY_ALARM_MSG,\r\n\tTICKET_NOT_RESPONSED,\r\n\tTICKET_NOT_REPLY,\r\n\tKEY_TICKET_TOTAL,\r\n\tTICKET_STATUS,\r\n\tCATEGORIES,\r\n\tSTATISTIC_ITEMS,\r\n\tTICKET_ACCEPT,\r\n\tTICKET_OPEN,\r\n\tTICKET_PAUSE,\r\n\tTICKET_INVALID,\r\n\tTICKET_CLOSE,\r\n\tTICKET_CLOSE_NORMAL,\r\n\tTICKET_CLOSE_ABNORMAL,\r\n\tTICKET_CLOSE_ON_TIME,\r\n\tTICKET_REPLY_OVER_48,\r\n\tCOL_RESPONSE_ALARM_LEVEL,\r\n\tCOL_REPLY_ALARM_LEVEL,\r\n\tALARM_VALUE,\r\n\tTICKET_CLOSE_PROCESS_TIME,\r\n\tTICKET_OPEN_PROCESS_TIME,\r\n\tTICKET_CLOSE_HANDLE_TIME_0_7,\r\n\tTICKET_CLOSE_HANDLE_TIME_7_15,\r\n\tTICKET_CLOSE_HANDLE_TIME_15_30,\r\n\tTICKET_CLOSE_HANDLE_TIME_30_60,\r\n\tTICKET_CLOSE_HANDLE_TIME_OVER_60,\r\n\tTICKET_OPEN_HANDLE_TIME_0_30,\r\n\tTICKET_OPEN_HANDLE_TIME_30_40,\r\n\tTICKET_OPEN_HANDLE_TIME_40_50,\r\n\tTICKET_OPEN_HANDLE_TIME_50_60,\r\n\tTICKET_OPEN_HANDLE_TIME_OVER_60,\r\n\tOVER_48_HOUR_NO_REPLY_ALARM,\r\n\tNEW_ADD_CLOSE_RATE,\r\n\tREMAIN_CLOSE_RATE,\r\n\tOVERALL_CLOSE_RATE,\r\n\tCLOSE_ON_TIME_RATE,\r\n\tTOTAL_OVERALL_CLOSE_RATE,\r\n\tCATEGORY_UNCLASSIFY,\r\n\tKEY_PROJECT_NAME,\r\n\tKEY_STATISTIC_ITEM,\r\n\tRATE_STATISTIC_ITEMS,\r\n\tCONTENT_UNKNOWN,\r\n\tTICKET_REOPEN_COUNT,\r\n\tCATEGORY_SALE_MANAGEMENT,\r\n\tCATEGORY_SALE_SERVICE,\r\n\tCATEGORY_PROPERTY_MANEGEMENT,\r\n\tCATEGORY_PROPERTY_SERVICE,\r\n} from '../constants';\r\n\r\nimport { message } from 'antd';\r\nimport moment from 'moment';\r\n\r\nexport const initStatisticItem = () => {\r\n\tlet map = {};\r\n\tfor (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n\t\tmap[category] = {};\r\n\t\tfor (let itemName of STATISTIC_ITEMS) {\r\n\t\t\tmap[category][itemName] = 0;\r\n\t\t}\r\n\t}\r\n\treturn map;\r\n}\r\n\r\nexport const initRate = () => {\r\n\tlet map = {};\r\n\tfor (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n\t\tmap[category] = {};\r\n\t\tfor (let itemName of RATE_STATISTIC_ITEMS) {\r\n\t\t\tmap[category][itemName] = 0;\r\n\t\t}\r\n\t}\r\n\treturn map;\r\n}\r\n\r\nexport const getCategory = ticket => {\r\n\tlet category = ticket[COL_CATEGORY] || CATEGORY_UNCLASSIFY;\r\n\tif (category === CATEGORY_SALE_MANAGEMENT) {\r\n\t\treturn CATEGORY_SALE_SERVICE;\r\n\t} else if (category === CATEGORY_PROPERTY_MANEGEMENT) {\r\n\t\treturn CATEGORY_PROPERTY_SERVICE;\r\n\t} else {\r\n\t\treturn category;\r\n\t}\r\n}\r\n\r\nexport const getItem = colContent => colContent || CONTENT_UNKNOWN;\r\n\r\nexport const formatStageToTable = (data) => {\r\n\tlet tableData = [];\r\n\tvar rowKey = 0;\r\n\tfor (let name in data) {\r\n\t\tfor (let statisticItem of STATISTIC_ITEMS) {\r\n\t\t\tlet rowData = {};\r\n\t\t\trowKey++;\r\n\t\t\trowData.key = rowKey;\r\n\t\t\trowData[KEY_PROJECT_NAME] = name;\r\n\t\t\trowData[KEY_STATISTIC_ITEM] = statisticItem;\r\n\t\t\tfor (let category of [...CATEGORIES, KEY_TICKET_TOTAL]) {\r\n\t\t\t\trowData[category] = data[name][category][statisticItem]\r\n\t\t\t}\r\n\t\t\ttableData.push(rowData);\r\n\t\t}\r\n\t}\r\n\treturn tableData;\r\n}\r\n\r\nconst STAGE = /\\d*期/;\r\n\r\nexport function filterProjectName(name) {\r\n\tlet filteredName = name;\r\n\tif (name.match(STAGE)) {\r\n\t\tfilteredName = name.substring(0, name.match(STAGE).index);\r\n\t}\r\n\t// name.replace(STAGE, '');\r\n\treturn filteredName;\r\n}\r\n\r\nconst statisticCloseHandleTime = (ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration) => {\r\n\tlet closeHandleTime = moment.duration(ticketCloseTime.diff(ticketReportTime))\r\n\t\t.subtract(ticketPauseDuration, 'hours').as('days');\r\n\tticketStatistic[TICKET_CLOSE_PROCESS_TIME] = ticketStatistic[TICKET_CLOSE_PROCESS_TIME] +\r\n\t\tcloseHandleTime;\r\n\r\n\tif (closeHandleTime < 7) {\r\n\t\tticketStatistic[TICKET_CLOSE_HANDLE_TIME_0_7]++;\r\n\t} else if (closeHandleTime < 15) {\r\n\t\tticketStatistic[TICKET_CLOSE_HANDLE_TIME_7_15]++;\r\n\t} else if (closeHandleTime < 30) {\r\n\t\tticketStatistic[TICKET_CLOSE_HANDLE_TIME_15_30]++;\r\n\t} else if (closeHandleTime < 60) {\r\n\t\tticketStatistic[TICKET_CLOSE_HANDLE_TIME_30_60]++;\r\n\t} else {\r\n\t\tticketStatistic[TICKET_CLOSE_HANDLE_TIME_OVER_60]++;\r\n\t}\r\n}\r\n\r\nconst statisticOpenHandleTime = (ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration) => {\r\n\tlet openHandleTime = moment.duration(moment(closeEndTime).diff(ticketReportTime))\r\n\t\t.subtract(ticketPauseDuration, 'hours').as('days');\r\n\tticketStatistic[TICKET_OPEN_PROCESS_TIME] = ticketStatistic[TICKET_OPEN_PROCESS_TIME] +\r\n\t\topenHandleTime;\r\n\r\n\tif (openHandleTime < 30) {\r\n\t\tticketStatistic[TICKET_OPEN_HANDLE_TIME_0_30]++;\r\n\t} else if (openHandleTime < 40) {\r\n\t\tticketStatistic[TICKET_OPEN_HANDLE_TIME_30_40]++;\r\n\t} else if (openHandleTime < 50) {\r\n\t\tticketStatistic[TICKET_OPEN_HANDLE_TIME_40_50]++;\r\n\t} else if (openHandleTime < 60) {\r\n\t\tticketStatistic[TICKET_OPEN_HANDLE_TIME_50_60]++;\r\n\t} else {\r\n\t\tticketStatistic[TICKET_OPEN_HANDLE_TIME_OVER_60]++;\r\n\t}\r\n}\r\n\r\n// 统计周期内新增\r\nexport const statisticPeriodNewAddedTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n\tlet dataMap = {};\r\n\tfor (let name of allItems) {\r\n\t\tdataMap[name] = initStatisticItem();\r\n\t}\r\n\tfor (let ticket of tickets) {\r\n\t\tlet name = getItem(ticket[col]);\r\n\t\tif (dataMap[name] == null) {\r\n\t\t\tdataMap[name] = initStatisticItem();\r\n\t\t}\r\n\t\tlet ticketCategory = getCategory(ticket);\r\n\t\tlet ticketStatistic = dataMap[name][ticketCategory];\r\n\t\tlet ticketStatus = ticket[COL_CURRENT_STATUS];\r\n\t\tlet ticketResponseAlarm = ticket[COL_RESPONSE_ALARM_LEVEL] === ALARM_VALUE;\r\n\t\tlet ticketReplyAlarm = ticket[COL_REPLY_ALARM_LEVEL] === ALARM_VALUE;\r\n\t\tlet ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n\t\tlet ticketPauseDuration = Number(ticket[COL_PAUSE]) || 0;\r\n\t\tlet ticketCloseTime = moment(ticket[COL_CLOSE_TIME]);\r\n\t\tlet ticketReopenCount = Number(ticket[COL_REOPEN_COUNT]) || 0;\r\n\t\tif (ticketStatistic == null) {\r\n\t\t\twindow.alert('异常分类：' + ticketCategory);\r\n\t\t}\r\n\r\n\t\tticketStatistic[TICKET_REOPEN_COUNT] += ticketReopenCount;\r\n\r\n\t\t// 受理= 新建+已分派+已响应+方案制定中+方案批准中+方案已批准+已回复+处理中+ 已关闭+非正常关闭+已评价+强制关闭（受理时间在周期内）\r\n\t\tif (ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n\t\t\tticketStatus === TICKET_STATUS.INVALID_APPROVE || ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n\t\t\tticketStatus === TICKET_STATUS.WORK_DOING ||\r\n\t\t\tticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW ||\r\n\t\t\tticketStatus === TICKET_STATUS.REPLY || ticketStatus === TICKET_STATUS.CLOSE_APPROVING ||\r\n\t\t\tticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.FORCE_CLOSE) {\r\n\t\t\tticketStatistic[TICKET_ACCEPT]++;\r\n\t\t}\r\n\r\n\t\t// 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n\t\tif ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.FORCE_CLOSE) &&\r\n\t\t\tticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n\t\t\tticketStatistic[TICKET_CLOSE]++;\r\n\r\n\t\t\t// 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n\t\t\tif (ticket[COL_OVERTIME_WARN] == null) {\r\n\t\t\t\tticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n\t\t\t}\r\n\r\n\t\t\t// 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n\t\t\tstatisticCloseHandleTime(ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration);\r\n\t\t}\r\n\r\n\t\t// 未关闭=新建+已分派+已响应+方案制定中+方案已批准+关闭审批中+已回复+处理中（关单时间统计结束日期后）\r\n\t\tif ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n\t\t\tticketStatus === TICKET_STATUS.INVALID_APPROVE || ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n\t\t\tticketStatus === TICKET_STATUS.WORK_DOING ||\r\n\t\t\tticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW ||\r\n\t\t\tticketStatus === TICKET_STATUS.REPLY || ticketStatus === TICKET_STATUS.CLOSE_APPROVING) ||\r\n\t\t\t((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n\t\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.FORCE_CLOSE) &&\r\n\t\t\t\tticketCloseTime > closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_OPEN]++;\r\n\r\n\t\t\t// 未关时长 = 剩余未关，用统计时间-受理时间-累计暂停时长\r\n\t\t\tstatisticOpenHandleTime(ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration);\r\n\t\t}\r\n\r\n\t\t// 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n\t\tif (ticketPauseDuration > 0) {\r\n\t\t\tticketStatistic[TICKET_PAUSE]++;\r\n\t\t}\r\n\r\n\t\t// 正常关闭 = 已关闭（关单时间在统计周期内）\r\n\t\tif (ticketStatus === TICKET_STATUS.CLOSED &&\r\n\t\t\t(ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n\t\t}\r\n\r\n\t\t// 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n\t\tif (ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL &&\r\n\t\t\t(ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n\t\t}\r\n\r\n\t\t// 未响应 = 响应预警等级（红色预警）\r\n\t\tif (ticketResponseAlarm) {\r\n\t\t\tticketStatistic[TICKET_NOT_RESPONSED]++;\r\n\t\t}\r\n\r\n\t\t// 未回复=回复预警等级（红色预警）\r\n\t\tif (ticketReplyAlarm) {\r\n\t\t\tticketStatistic[TICKET_NOT_REPLY]++;\r\n\t\t}\r\n\r\n\t\t// 无效 = 无效 + 无效审批中\r\n\t\tif (ticketStatus === TICKET_STATUS.INVALID || ticketStatus === TICKET_STATUS.INVALID_APPROVE) {\r\n\t\t\tticketStatistic[TICKET_INVALID]++;\r\n\t\t}\r\n\r\n\t\tif ((ticketStatus === TICKET_STATUS.INVALID || ticketStatus === TICKET_STATUS.INVALID_APPROVE) &&\r\n\t\t\tticket[COL_REPLY_ALARM_MSG] === OVER_48_HOUR_NO_REPLY_ALARM) {\r\n\t\t\tticketStatistic[TICKET_REPLY_OVER_48]++;\r\n\t\t}\r\n\t}\r\n\r\n\t// 合计\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let statisticItem of STATISTIC_ITEMS) {\r\n\t\t\tfor (let category of CATEGORIES) {\r\n\t\t\t\tdataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 计算平均关闭时长和未关时长\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let category in dataMap[name]) {\r\n\t\t\tlet ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n\t\t\tlet ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n\t\t\tdataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n\t\t\t\tticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n\t\t\tlet ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n\t\t\tlet ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n\t\t\tdataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n\t\t\t\tticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n\t\t}\r\n\t}\r\n\treturn dataMap;\r\n}\r\n\r\n// 本年度统计周期前遗留\r\nexport const statisticThisYearBeforePeriodTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n\tlet dataMap = {};\r\n\tfor (let name of allItems) {\r\n\t\tdataMap[name] = initStatisticItem();\r\n\t}\r\n\tfor (let ticket of tickets) {\r\n\t\tlet name = getItem(ticket[col]);\r\n\t\tif (dataMap[name] == null) {\r\n\t\t\tdataMap[name] = initStatisticItem();\r\n\t\t}\r\n\t\tlet ticketCategory = getCategory(ticket);\r\n\t\tlet ticketStatistic = dataMap[name][ticketCategory];\r\n\t\tlet ticketStatus = ticket[COL_CURRENT_STATUS];\r\n\t\tlet ticketResponseAlarm = ticket[COL_RESPONSE_ALARM_LEVEL] === ALARM_VALUE;\r\n\t\tlet ticketReplyAlarm = ticket[COL_REPLY_ALARM_LEVEL] === ALARM_VALUE;\r\n\t\tlet ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n\t\tlet ticketPauseDuration = Number(ticket[COL_PAUSE]) || 0;\r\n\t\tlet ticketCloseTime = moment(ticket[COL_CLOSE_TIME]);\r\n\t\tlet ticketReopenCount = Number(ticket[COL_REOPEN_COUNT]) || 0;\r\n\t\tif (ticketStatistic == null) {\r\n\t\t\twindow.alert('异常分类：' + ticketCategory);\r\n\t\t}\r\n\r\n\t\tticketStatistic[TICKET_REOPEN_COUNT] += ticketReopenCount;\r\n\r\n\t\t//\t受理= 新建+已分派+已响应+方案制定中+方案批准中+方案已批准+已回复+处理中+\r\n\t\t//\t\t\t\t已关闭+非正常关闭+已评价+强制关闭（关单时间在统计开始日期后）\r\n\t\tif (ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n\t\t\tticketStatus === TICKET_STATUS.INVALID_APPROVE || ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n\t\t\tticketStatus === TICKET_STATUS.WORK_DOING ||\r\n\t\t\tticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW ||\r\n\t\t\tticketStatus === TICKET_STATUS.REPLY || ticketStatus === TICKET_STATUS.CLOSE_APPROVING ||\r\n\t\t\t((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.FORCE_CLOSE) &&\r\n\t\t\tticketCloseTime >= closeStartTime)) {\r\n\t\t\tticketStatistic[TICKET_ACCEPT]++;\r\n\t\t}\r\n\r\n\t\t// 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n\t\tif ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n\t\t\tticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n\t\t\tticketStatistic[TICKET_CLOSE]++;\r\n\r\n\t\t\t// 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n\t\t\tif (ticket[COL_OVERTIME_WARN] == null) {\r\n\t\t\t\tticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n\t\t\t}\r\n\r\n\t\t\t// 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n\t\t\tstatisticCloseHandleTime(ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration);\r\n\t\t}\r\n\r\n\t\t// 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n\t\t//\t\t+ 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n\t\tif ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n\t\t\tticketStatus === TICKET_STATUS.INVALID_APPROVE || ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n\t\t\tticketStatus === TICKET_STATUS.WORK_DOING ||\r\n\t\t\tticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW ||\r\n\t\t\tticketStatus === TICKET_STATUS.REPLY || ticketStatus === TICKET_STATUS.CLOSE_APPROVING) ||\r\n\t\t\t((ticketStatus === TICKET_STATUS.CLOSED ||\r\n\t\t\t\tticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n\t\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n\t\t\t\tticketCloseTime > closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_OPEN]++;\r\n\r\n\t\t\t// 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n\t\t\tstatisticOpenHandleTime(ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration);\r\n\t\t}\r\n\r\n\t\t// 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n\t\tif (ticketPauseDuration > 0) {\r\n\t\t\tticketStatistic[TICKET_PAUSE]++;\r\n\t\t}\r\n\r\n\t\t// 正常关闭 = 已关闭（关单时间在统计周期内）\r\n\t\tif (ticketStatus === TICKET_STATUS.CLOSED &&\r\n\t\t\t(ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n\t\t}\r\n\r\n\t\t// 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n\t\tif (ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL &&\r\n\t\t\t(ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n\t\t}\r\n\r\n\t\t// 未响应 = 响应预警等级（红色预警）\r\n\t\tif (ticketResponseAlarm) {\r\n\t\t\tticketStatistic[TICKET_NOT_RESPONSED]++;\r\n\t\t}\r\n\r\n\t\t// 未回复=回复预警等级（红色预警）\r\n\t\tif (ticketReplyAlarm) {\r\n\t\t\tticketStatistic[TICKET_NOT_REPLY]++;\r\n\t\t}\r\n\r\n\t\t// 无效 = 无效 + 无效审批中\r\n\t\tif (ticketStatus === TICKET_STATUS.INVALID || ticketStatus === TICKET_STATUS.INVALID_APPROVE) {\r\n\t\t\tticketStatistic[TICKET_INVALID]++;\r\n\t\t}\r\n\r\n\t\tif ((ticketStatus === TICKET_STATUS.INVALID || ticketStatus === TICKET_STATUS.INVALID_APPROVE) &&\r\n\t\t\tticket[COL_REPLY_ALARM_MSG] === OVER_48_HOUR_NO_REPLY_ALARM) {\r\n\t\t\tticketStatistic[TICKET_REPLY_OVER_48]++;\r\n\t\t}\r\n\t}\r\n\r\n\t// 合计\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let statisticItem of STATISTIC_ITEMS) {\r\n\t\t\tfor (let category of CATEGORIES) {\r\n\t\t\t\tdataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 计算平均关闭时长和未关时长\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let category in dataMap[name]) {\r\n\t\t\tlet ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n\t\t\tlet ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n\t\t\tdataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n\t\t\t\tticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n\t\t\tlet ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n\t\t\tlet ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n\t\t\tdataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n\t\t\t\tticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n\t\t}\r\n\t}\r\n\treturn dataMap;\r\n}\r\n\r\n// 本年度统计周期前遗留累计\r\nexport const statisticThisYearBeforePeriodTotalTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n\tlet dataMap = {};\r\n\tfor (let name of allItems) {\r\n\t\tdataMap[name] = initStatisticItem();\r\n\t}\r\n\tfor (let ticket of tickets) {\r\n\t\tlet name = getItem(ticket[col]);\r\n\t\tif (dataMap[name] == null) {\r\n\t\t\tdataMap[name] = initStatisticItem();\r\n\t\t}\r\n\t\tlet ticketCategory = getCategory(ticket);\r\n\t\tlet ticketStatistic = dataMap[name][ticketCategory];\r\n\t\tlet ticketStatus = ticket[COL_CURRENT_STATUS];\r\n\t\tlet ticketCloseTime = moment(ticket[COL_CLOSE_TIME]);\r\n\t\tlet ticketReopenCount = Number(ticket[COL_REOPEN_COUNT]) || 0;\r\n\t\tif (ticketStatistic == null) {\r\n\t\t\twindow.alert('异常分类：' + ticketCategory);\r\n\t\t}\r\n\r\n\t\tticketStatistic[TICKET_REOPEN_COUNT] += ticketReopenCount;\r\n\r\n\t\t// 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n\t\t// （关单时间在统计周期）\r\n\t\tif (ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n\t\t\tticketStatus === TICKET_STATUS.INVALID_APPROVE || ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n\t\t\tticketStatus === TICKET_STATUS.WORK_DOING ||\r\n\t\t\tticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW ||\r\n\t\t\tticketStatus === TICKET_STATUS.REPLY || ticketStatus === TICKET_STATUS.CLOSE_APPROVING ||\r\n\t\t\t((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.FORCE_CLOSE) &&\r\n\t\t\tticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n\t\t\t\tticketStatistic[TICKET_ACCEPT]++;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let statisticItem of STATISTIC_ITEMS) {\r\n\t\t\tfor (let category of CATEGORIES) {\r\n\t\t\t\tdataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn dataMap;\r\n}\r\n\r\n// 上年度统计周期前遗留\r\nexport const statisticLastYearBeforePeriodTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n\tlet dataMap = {};\r\n\tfor (let name of allItems) {\r\n\t\tdataMap[name] = initStatisticItem();\r\n\t}\r\n\tfor (let ticket of tickets) {\r\n\t\tlet name = getItem(ticket[col]);\r\n\t\tif (dataMap[name] == null) {\r\n\t\t\tdataMap[name] = initStatisticItem();\r\n\t\t}\r\n\t\tlet ticketCategory = getCategory(ticket);\r\n\t\tlet ticketStatistic = dataMap[name][ticketCategory];\r\n\t\tlet ticketStatus = ticket[COL_CURRENT_STATUS];\r\n\t\tlet ticketResponseAlarm = ticket[COL_RESPONSE_ALARM_LEVEL] === ALARM_VALUE;\r\n\t\tlet ticketReplyAlarm = ticket[COL_REPLY_ALARM_LEVEL] === ALARM_VALUE;\r\n\t\tlet ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n\t\tlet ticketPauseDuration = Number(ticket[COL_PAUSE]) || 0;\r\n\t\tlet ticketCloseTime = moment(ticket[COL_CLOSE_TIME]);\r\n\t\tlet ticketReopenCount = Number(ticket[COL_REOPEN_COUNT]) || 0;\r\n\t\tif (ticketStatistic == null) {\r\n\t\t\twindow.alert('异常分类：' + ticketCategory);\r\n\t\t}\r\n\r\n\t\tticketStatistic[TICKET_REOPEN_COUNT] += ticketReopenCount;\r\n\r\n\t\t// 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n\t\t// （关单时间在统计开始日期后）\r\n\t\tif (ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n\t\t\tticketStatus === TICKET_STATUS.INVALID_APPROVE || ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n\t\t\tticketStatus === TICKET_STATUS.WORK_DOING ||\r\n\t\t\tticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW ||\r\n\t\t\tticketStatus === TICKET_STATUS.REPLY || ticketStatus === TICKET_STATUS.CLOSE_APPROVING ||\r\n\t\t\t((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.FORCE_CLOSE) &&\r\n\t\t\tticketCloseTime >= closeStartTime)) {\r\n\t\t\t\tticketStatistic[TICKET_ACCEPT]++;\r\n\t\t}\r\n\r\n\t\t// 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n\t\tif ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n\t\t\tticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n\t\t\tticketStatistic[TICKET_CLOSE]++;\r\n\r\n\t\t\t// 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n\t\t\tif (ticket[COL_OVERTIME_WARN] == null) {\r\n\t\t\t\tticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n\t\t\t}\r\n\r\n\t\t\t// 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n\t\t\tstatisticCloseHandleTime(ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration);\r\n\t\t}\r\n\r\n\t\t// 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n\t\t//\t\t+ 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n\t\tif ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n\t\t\tticketStatus === TICKET_STATUS.INVALID_APPROVE || ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n\t\t\tticketStatus === TICKET_STATUS.WORK_DOING ||\r\n\t\t\tticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW ||\r\n\t\t\tticketStatus === TICKET_STATUS.REPLY || ticketStatus === TICKET_STATUS.CLOSE_APPROVING) ||\r\n\t\t\t((ticketStatus === TICKET_STATUS.CLOSED ||\r\n\t\t\t\tticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n\t\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n\t\t\t\tticketCloseTime > closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_OPEN]++;\r\n\r\n\t\t\t// 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n\t\t\tstatisticOpenHandleTime(ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration);\r\n\t\t}\r\n\r\n\t\t// 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n\t\tif (ticketPauseDuration > 0) {\r\n\t\t\tticketStatistic[TICKET_PAUSE]++;\r\n\t\t}\r\n\r\n\t\t// 正常关闭 = 已关闭（关单时间在统计周期内）\r\n\t\tif (ticketStatus === TICKET_STATUS.CLOSED &&\r\n\t\t\t(ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n\t\t}\r\n\r\n\t\t// 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n\t\tif (ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL &&\r\n\t\t\t(ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n\t\t}\r\n\r\n\t\t// 未响应 = 响应预警等级（红色预警）\r\n\t\tif (ticketResponseAlarm) {\r\n\t\t\tticketStatistic[TICKET_NOT_RESPONSED]++;\r\n\t\t}\r\n\r\n\t\t// 未回复=回复预警等级（红色预警）\r\n\t\tif (ticketReplyAlarm) {\r\n\t\t\tticketStatistic[TICKET_NOT_REPLY]++;\r\n\t\t}\r\n\r\n\t\t// 无效 = 无效 + 无效审批中\r\n\t\tif (ticketStatus === TICKET_STATUS.INVALID || ticketStatus === TICKET_STATUS.INVALID_APPROVE) {\r\n\t\t\tticketStatistic[TICKET_INVALID]++;\r\n\t\t}\r\n\r\n\t\tif ((ticketStatus === TICKET_STATUS.INVALID || ticketStatus === TICKET_STATUS.INVALID_APPROVE) &&\r\n\t\t\tticket[COL_REPLY_ALARM_MSG] === OVER_48_HOUR_NO_REPLY_ALARM) {\r\n\t\t\tticketStatistic[TICKET_REPLY_OVER_48]++;\r\n\t\t}\r\n\t}\r\n\r\n\t// 合计\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let statisticItem of STATISTIC_ITEMS) {\r\n\t\t\tfor (let category of CATEGORIES) {\r\n\t\t\t\tdataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 计算平均关闭时长和未关时长\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let category in dataMap[name]) {\r\n\t\t\tlet ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n\t\t\tlet ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n\t\t\tdataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n\t\t\t\tticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n\t\t\tlet ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n\t\t\tlet ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n\t\t\tdataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n\t\t\t\tticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n\t\t}\r\n\t}\r\n\treturn dataMap;\r\n}\r\n\r\n// 上年度统计周期前遗留累计\r\nexport const statisticLastYearBeforePeriodTotalTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n\tlet dataMap = {};\r\n\tfor (let name of allItems) {\r\n\t\tdataMap[name] = initStatisticItem();\r\n\t}\r\n\tfor (let ticket of tickets) {\r\n\t\tlet name = getItem(ticket[col]);\r\n\t\tif (dataMap[name] == null) {\r\n\t\t\tdataMap[name] = initStatisticItem();\r\n\t\t}\r\n\t\tlet ticketCategory = getCategory(ticket);\r\n\t\tlet ticketStatistic = dataMap[name][ticketCategory];\r\n\t\tlet ticketStatus = ticket[COL_CURRENT_STATUS];\r\n\t\tlet ticketResponseAlarm = ticket[COL_RESPONSE_ALARM_LEVEL] === ALARM_VALUE;\r\n\t\tlet ticketReplyAlarm = ticket[COL_REPLY_ALARM_LEVEL] === ALARM_VALUE;\r\n\t\tlet ticketReportTime = moment(ticket[COL_REPORT_TIME]) || 0;\r\n\t\tlet ticketPauseDuration = Number(ticket[COL_PAUSE]);\r\n\t\tlet ticketCloseTime = moment(ticket[COL_CLOSE_TIME]);\r\n\t\tlet ticketReopenCount = Number(ticket[COL_REOPEN_COUNT]) || 0;\r\n\t\tif (ticketStatistic == null) {\r\n\t\t\twindow.alert('异常分类：' + ticketCategory);\r\n\t\t}\r\n\r\n\t\tticketStatistic[TICKET_REOPEN_COUNT] += ticketReopenCount;\r\n\r\n\t\t// 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n\t\t// （关单时间在统计开始日期后）\r\n\t\tif (ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n\t\t\tticketStatus === TICKET_STATUS.INVALID_APPROVE || ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n\t\t\tticketStatus === TICKET_STATUS.WORK_DOING ||\r\n\t\t\tticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW ||\r\n\t\t\tticketStatus === TICKET_STATUS.REPLY || ticketStatus === TICKET_STATUS.CLOSE_APPROVING ||\r\n\t\t\t((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.FORCE_CLOSE) &&\r\n\t\t\tticketCloseTime >= closeStartTime)) {\r\n\t\t\t\tticketStatistic[TICKET_ACCEPT]++;\r\n\t\t}\r\n\r\n\t\t// 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n\t\tif ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n\t\t\tticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n\t\t\tticketStatistic[TICKET_CLOSE]++;\r\n\r\n\t\t\t// 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n\t\t\tif (ticket[COL_OVERTIME_WARN] == null) {\r\n\t\t\t\tticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n\t\t\t}\r\n\r\n\t\t\t// 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n\t\t\tstatisticCloseHandleTime(ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration);\r\n\t\t}\r\n\r\n\t\t// 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n\t\t//\t\t+ 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n\t\tif ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n\t\t\tticketStatus === TICKET_STATUS.INVALID_APPROVE || ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n\t\t\tticketStatus === TICKET_STATUS.WORK_DOING ||\r\n\t\t\tticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW ||\r\n\t\t\tticketStatus === TICKET_STATUS.REPLY || ticketStatus === TICKET_STATUS.CLOSE_APPROVING) ||\r\n\t\t\t((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n\t\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n\t\t\t\tticketCloseTime > closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_OPEN]++;\r\n\r\n\t\t\t// 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n\t\t\tstatisticOpenHandleTime(ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration);\r\n\t\t}\r\n\r\n\t\t// 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n\t\tif (ticketPauseDuration > 0) {\r\n\t\t\tticketStatistic[TICKET_PAUSE]++;\r\n\t\t}\r\n\r\n\t\t// 正常关闭 = 已关闭（关单时间在统计周期内）\r\n\t\tif (ticketStatus === TICKET_STATUS.CLOSED &&\r\n\t\t\t(ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n\t\t}\r\n\r\n\t\t// 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n\t\tif (ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL &&\r\n\t\t\t(ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n\t\t}\r\n\r\n\t\t// 未响应 = 响应预警等级（红色预警）\r\n\t\tif (ticketResponseAlarm) {\r\n\t\t\tticketStatistic[TICKET_NOT_RESPONSED]++;\r\n\t\t}\r\n\r\n\t\t// 未回复=回复预警等级（红色预警）\r\n\t\tif (ticketReplyAlarm) {\r\n\t\t\tticketStatistic[TICKET_NOT_REPLY]++;\r\n\t\t}\r\n\r\n\t\t// 无效 = 无效 + 无效审批中\r\n\t\tif (ticketStatus === TICKET_STATUS.INVALID || ticketStatus === TICKET_STATUS.INVALID_APPROVE) {\r\n\t\t\tticketStatistic[TICKET_INVALID]++;\r\n\t\t}\r\n\r\n\t\tif ((ticketStatus === TICKET_STATUS.INVALID || ticketStatus === TICKET_STATUS.INVALID_APPROVE) &&\r\n\t\t\tticket[COL_REPLY_ALARM_MSG] === OVER_48_HOUR_NO_REPLY_ALARM) {\r\n\t\t\tticketStatistic[TICKET_REPLY_OVER_48]++;\r\n\t\t}\r\n\t}\r\n\r\n\t// 合计\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let statisticItem of STATISTIC_ITEMS) {\r\n\t\t\tfor (let category of CATEGORIES) {\r\n\t\t\t\tdataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 计算平均关闭时长和未关时长\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let category in dataMap[name]) {\r\n\t\t\tlet ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n\t\t\tlet ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n\t\t\tdataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n\t\t\t\tticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n\t\t\tlet ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n\t\t\tlet ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n\t\t\tdataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n\t\t\t\tticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n\t\t}\r\n\t}\r\n\treturn dataMap;\r\n}\r\n\r\n// 本年度统计周期累计\r\nexport const statisticThisYearTotalTickets = (tickets, closeStartTime, closeEndTime, col, allItems) => {\r\n\tlet dataMap = {};\r\n\tfor (let name of allItems) {\r\n\t\tdataMap[name] = initStatisticItem();\r\n\t}\r\n\tfor (let ticket of tickets) {\r\n\t\tlet name = getItem(ticket[col]);\r\n\t\tif (dataMap[name] == null) {\r\n\t\t\tdataMap[name] = initStatisticItem();\r\n\t\t}\r\n\t\tlet ticketCategory = getCategory(ticket);\r\n\t\tlet ticketStatistic = dataMap[name][ticketCategory];\r\n\t\tlet ticketStatus = ticket[COL_CURRENT_STATUS];\r\n\t\tlet ticketResponseAlarm = ticket[COL_RESPONSE_ALARM_LEVEL] === ALARM_VALUE;\r\n\t\tlet ticketReplyAlarm = ticket[COL_REPLY_ALARM_LEVEL] === ALARM_VALUE;\r\n\t\tlet ticketReportTime = moment(ticket[COL_REPORT_TIME]);\r\n\t\tlet ticketPauseDuration = Number(ticket[COL_PAUSE]) || 0;\r\n\t\tlet ticketCloseTime = moment(ticket[COL_CLOSE_TIME]);\r\n\t\tlet ticketReopenCount = Number(ticket[COL_REOPEN_COUNT]) || 0;\r\n\t\tif (ticketStatistic == null) {\r\n\t\t\twindow.alert('异常分类：' + ticketCategory);\r\n\t\t}\r\n\r\n\t\tticketStatistic[TICKET_REOPEN_COUNT] += ticketReopenCount;\r\n\r\n\t\t// 受理 = 已响应+方案制定中+已关闭+施工完成+已上门+强制关闭+方案已批准+已评价+施工中+非正常关闭+已分派+新建\r\n\t\t// （关单时间在统计开始日期后）\r\n\t\tif (ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n\t\t\tticketStatus === TICKET_STATUS.INVALID_APPROVE || ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n\t\t\tticketStatus === TICKET_STATUS.WORK_DOING ||\r\n\t\t\tticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW ||\r\n\t\t\tticketStatus === TICKET_STATUS.REPLY || ticketStatus === TICKET_STATUS.CLOSE_APPROVING ||\r\n\t\t\t((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL ||\r\n\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.FORCE_CLOSE) &&\r\n\t\t\tticketCloseTime >= closeStartTime)) {\r\n\t\t\t\tticketStatistic[TICKET_ACCEPT]++;\r\n\t\t}\r\n\r\n\t\t// 关闭 = 已关闭+强制关闭+已评价+非正常关闭（关单时间在统计周期内）\r\n\t\tif ((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n\t\t\tticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime) {\r\n\t\t\tticketStatistic[TICKET_CLOSE]++;\r\n\r\n\t\t\t// 及时关闭 = 关闭，查看总时长超时预警，无字段为及时关闭\r\n\t\t\tif (ticket[COL_OVERTIME_WARN] == null) {\r\n\t\t\t\tticketStatistic[TICKET_CLOSE_ON_TIME]++;\r\n\t\t\t}\r\n\r\n\t\t\t// 已关时长 = 关闭，有关闭时间（业主关闭时间+非正常关闭时间+强制关闭时间），用关闭时间-受理时间-累计暂停时长\r\n\t\t\tstatisticCloseHandleTime(ticketStatistic, ticketCloseTime, ticketReportTime, ticketPauseDuration);\r\n\t\t}\r\n\r\n\t\t// 剩余未关 = 已响应+方案制定中+施工完成+已上门+方案已批准+施工中+已分派+新建\r\n\t\t//\t\t+ 已关闭+强制关闭+已评价+非正常关闭（关单时间统计结束日期后）\r\n\t\tif ((ticketStatus === TICKET_STATUS.RESPONSED || ticketStatus === TICKET_STATUS.SOLUTION_PREPARE ||\r\n\t\t\tticketStatus === TICKET_STATUS.INVALID_APPROVE || ticketStatus === TICKET_STATUS.SOLUTION_APPROVE ||\r\n\t\t\tticketStatus === TICKET_STATUS.WORK_DOING ||\r\n\t\t\tticketStatus === TICKET_STATUS.DISPATCHED || ticketStatus === TICKET_STATUS.NEW ||\r\n\t\t\tticketStatus === TICKET_STATUS.REPLY || ticketStatus === TICKET_STATUS.CLOSE_APPROVING) ||\r\n\t\t\t((ticketStatus === TICKET_STATUS.CLOSED || ticketStatus === TICKET_STATUS.FORCE_CLOSE ||\r\n\t\t\t\tticketStatus === TICKET_STATUS.COMMENTED || ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL) &&\r\n\t\t\t\tticketCloseTime > closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_OPEN]++;\r\n\r\n\t\t\t// 未关时长 = 剩余未关，用统计结束时间-受理时间-累计暂停时长\r\n\t\t\tstatisticOpenHandleTime(ticketStatistic, closeEndTime, ticketReportTime, ticketPauseDuration);\r\n\t\t}\r\n\r\n\t\t// 暂停处理 = 累计暂停时长（只能统计是否有过暂停处理，有字段为1次，依次叠加，即只统计次数）\r\n\t\tif (ticketPauseDuration > 0) {\r\n\t\t\tticketStatistic[TICKET_PAUSE]++;\r\n\t\t}\r\n\r\n\t\t// 正常关闭 = 已关闭（关单时间在统计周期内）\r\n\t\tif (ticketStatus === TICKET_STATUS.CLOSED &&\r\n\t\t\t(ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_CLOSE_NORMAL]++;\r\n\t\t}\r\n\r\n\t\t// 非正常关闭 = 非正常关闭（关单时间在统计周期内）\r\n\t\tif (ticketStatus === TICKET_STATUS.CLOSE_ABNORMAL &&\r\n\t\t\t(ticketCloseTime >= closeStartTime && ticketCloseTime <= closeEndTime)) {\r\n\t\t\tticketStatistic[TICKET_CLOSE_ABNORMAL]++;\r\n\t\t}\r\n\r\n\t\t// 未响应 = 响应预警等级（红色预警）\r\n\t\tif (ticketResponseAlarm) {\r\n\t\t\tticketStatistic[TICKET_NOT_RESPONSED]++;\r\n\t\t}\r\n\r\n\t\t// 未回复=回复预警等级（红色预警）\r\n\t\tif (ticketReplyAlarm) {\r\n\t\t\tticketStatistic[TICKET_NOT_REPLY]++;\r\n\t\t}\r\n\r\n\t\t// 无效 = 无效 + 无效审批中\r\n\t\tif (ticketStatus === TICKET_STATUS.INVALID || ticketStatus === TICKET_STATUS.INVALID_APPROVE) {\r\n\t\t\tticketStatistic[TICKET_INVALID]++;\r\n\t\t}\r\n\r\n\t\tif ((ticketStatus === TICKET_STATUS.INVALID || ticketStatus === TICKET_STATUS.INVALID_APPROVE) &&\r\n\t\t\tticket[COL_REPLY_ALARM_MSG] === OVER_48_HOUR_NO_REPLY_ALARM) {\r\n\t\t\tticketStatistic[TICKET_REPLY_OVER_48]++;\r\n\t\t}\r\n\t}\r\n\r\n\t// 合计\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let statisticItem of STATISTIC_ITEMS) {\r\n\t\t\tfor (let category of CATEGORIES) {\r\n\t\t\t\tdataMap[name][KEY_TICKET_TOTAL][statisticItem] += dataMap[name][category][statisticItem];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 计算平均关闭时长和未关时长\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let category in dataMap[name]) {\r\n\t\t\tlet ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n\t\t\tlet ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n\t\t\tdataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n\t\t\t\tticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n\t\t\tlet ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n\t\t\tlet ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n\t\t\tdataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n\t\t\t\tticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n\t\t}\r\n\t}\r\n\treturn dataMap;\r\n}\r\n\r\n// 统计周期前需处理\r\nexport const statisticBeforePeriodNeedHandleResult = (array, allItems) => {\r\n\tlet dataMap = {};\r\n\tfor (let name of allItems) {\r\n\t\tdataMap[name] = initStatisticItem();\r\n\t}\r\n\tfor (let result of array) {\r\n\t\tfor (let name in result) {\r\n\t\t\tif (dataMap[name] == null) {\r\n\t\t\t\tdataMap[name] = initStatisticItem();\r\n\t\t\t}\r\n\t\t\tfor (let category in dataMap[name]) {\r\n\t\t\t\tfor (let item of STATISTIC_ITEMS) {\r\n\t\t\t\t\tif (item === TICKET_CLOSE_PROCESS_TIME) {\r\n\t\t\t\t\t\tlet ticketCloseCount = result[name][category][TICKET_CLOSE];\r\n\t\t\t\t\t\tlet ticketCloseProcessTime = result[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n\t\t\t\t\t\tdataMap[name][category][TICKET_CLOSE_PROCESS_TIME] +=\r\n\t\t\t\t\t\t\tticketCloseCount * ticketCloseProcessTime;\r\n\t\t\t\t\t} else if (item === TICKET_OPEN_PROCESS_TIME) {\r\n\t\t\t\t\t\tlet ticketOpenProcessTime = result[name][category][TICKET_OPEN_PROCESS_TIME];\r\n\t\t\t\t\t\tlet ticketOpenCount = result[name][category][TICKET_OPEN];\r\n\t\t\t\t\t\tdataMap[name][category][TICKET_OPEN_PROCESS_TIME] +=\r\n\t\t\t\t\t\t\tticketOpenCount * ticketOpenProcessTime;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataMap[name][category][item] +=\r\n\t\t\t\t\t\t\tresult[name][category][item];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// get average process time\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let category in dataMap[name]) {\r\n\t\t\tlet ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n\t\t\tlet ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n\t\t\tdataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n\t\t\t\tticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n\t\t\tlet ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n\t\t\tlet ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n\t\t\tdataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n\t\t\t\tticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n\t\t}\r\n\t}\r\n\treturn dataMap;\r\n}\r\n\r\n// 统计周期累计\r\nexport const statisticPeriodTotalResult = (array, allItems) => {\r\n\tlet dataMap = {};\r\n\tfor (let name of allItems) {\r\n\t\tdataMap[name] = initStatisticItem();\r\n\t}\r\n\tfor (let result of array) {\r\n\t\tfor (let name in result) {\r\n\t\t\tif (dataMap[name] == null) {\r\n\t\t\t\tdataMap[name] = initStatisticItem();\r\n\t\t\t}\r\n\t\t\tfor (let category in dataMap[name]) {\r\n\t\t\t\tfor (let item of STATISTIC_ITEMS) {\r\n\t\t\t\t\tif (item === TICKET_CLOSE_PROCESS_TIME) {\r\n\t\t\t\t\t\tlet ticketCloseCount = result[name][category][TICKET_CLOSE];\r\n\t\t\t\t\t\tlet ticketCloseProcessTime = result[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n\t\t\t\t\t\tdataMap[name][category][TICKET_CLOSE_PROCESS_TIME] +=\r\n\t\t\t\t\t\t\tticketCloseCount * ticketCloseProcessTime;\r\n\t\t\t\t\t} else if (item === TICKET_OPEN_PROCESS_TIME) {\r\n\t\t\t\t\t\tlet ticketOpenProcessTime = result[name][category][TICKET_OPEN_PROCESS_TIME];\r\n\t\t\t\t\t\tlet ticketOpenCount = result[name][category][TICKET_OPEN];\r\n\t\t\t\t\t\tdataMap[name][category][TICKET_OPEN_PROCESS_TIME] +=\r\n\t\t\t\t\t\t\tticketOpenCount * ticketOpenProcessTime;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataMap[name][category][item] +=\r\n\t\t\t\t\t\t\tresult[name][category][item];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// get average process time\r\n\tfor (let name in dataMap) {\r\n\t\tfor (let category in dataMap[name]) {\r\n\t\t\tlet ticketCloseProcessTime = dataMap[name][category][TICKET_CLOSE_PROCESS_TIME];\r\n\t\t\tlet ticketCloseCount = dataMap[name][category][TICKET_CLOSE];\r\n\t\t\tdataMap[name][category][TICKET_CLOSE_PROCESS_TIME] =\r\n\t\t\t\tticketCloseCount > 0 ? Number(ticketCloseProcessTime / ticketCloseCount).toFixed(2) : 0;\r\n\r\n\t\t\tlet ticketOpenProcessTime = dataMap[name][category][TICKET_OPEN_PROCESS_TIME];\r\n\t\t\tlet ticketOpenCount = dataMap[name][category][TICKET_OPEN];\r\n\t\t\tdataMap[name][category][TICKET_OPEN_PROCESS_TIME] =\r\n\t\t\t\tticketOpenCount > 0 ? Number(ticketOpenProcessTime / ticketOpenCount).toFixed(2) : 0;\r\n\t\t}\r\n\t}\r\n\r\n\treturn dataMap;\r\n}\r\n\r\nexport const statisticRate = (statisticMap, statisticItem, rateMap) => {\r\n\tfor (let name in statisticMap) {\r\n\t\tfor (let category in rateMap[name]) {\r\n\t\t\tif (statisticMap[name][category][TICKET_ACCEPT] > 0) {\r\n\t\t\t\tif (statisticItem === NEW_ADD_CLOSE_RATE) {\r\n\t\t\t\t\trateMap[name][category][statisticItem] =\r\n\t\t\t\t\t\t(statisticMap[name][category][TICKET_CLOSE] /\r\n\t\t\t\t\t\t\tstatisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n\t\t\t\t} else if (statisticItem === REMAIN_CLOSE_RATE) {\r\n\t\t\t\t\trateMap[name][category][statisticItem] =\r\n\t\t\t\t\t\t(statisticMap[name][category][TICKET_CLOSE] /\r\n\t\t\t\t\t\t\tstatisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n\t\t\t\t} else if (statisticItem === OVERALL_CLOSE_RATE) {\r\n\t\t\t\t\trateMap[name][category][statisticItem] =\r\n\t\t\t\t\t\t(statisticMap[name][category][TICKET_CLOSE] /\r\n\t\t\t\t\t\t\tstatisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n\t\t\t\t} else if (statisticItem === CLOSE_ON_TIME_RATE) {\r\n\t\t\t\t\trateMap[name][category][statisticItem] =\r\n\t\t\t\t\t\t(statisticMap[name][category][TICKET_CLOSE_ON_TIME] /\r\n\t\t\t\t\t\t\tstatisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n\t\t\t\t} else if (statisticItem === TOTAL_OVERALL_CLOSE_RATE) {\r\n\t\t\t\t\trateMap[name][category][statisticItem] =\r\n\t\t\t\t\t\t(statisticMap[name][category][TICKET_CLOSE] /\r\n\t\t\t\t\t\t\tstatisticMap[name][category][TICKET_ACCEPT]).toFixed(4);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const statistc = (periodTickets, beforePeriodTickets, thisYearTotalTickets,\r\n\tlastYearBeforePeriodTickets, startTime, endTime, col, allItems) => {\r\n\tlet yearStartTime = moment(startTime).set({ month: 0, date: 1, hour: 0, minute: 0, second: 0 });\r\n\tlet data = {};\r\n\tdata.periodNewAddedResult = statisticPeriodNewAddedTickets(periodTickets,\r\n\t\tstartTime, endTime, col, allItems);\r\n\tdata.thisYearBeforePeriodResult = statisticThisYearBeforePeriodTickets(beforePeriodTickets,\r\n\t\tstartTime, endTime, col, allItems);\r\n\tdata.thisYearBeforePeriodTotalResult = statisticThisYearBeforePeriodTotalTickets(beforePeriodTickets,\r\n\t\tstartTime, endTime, col, allItems);\r\n\tdata.lastYearBeforePeriodResult = statisticLastYearBeforePeriodTickets(lastYearBeforePeriodTickets,\r\n\t\tstartTime, endTime, col, allItems);\r\n\tdata.lastYearBeforePeriodTotalResult = statisticLastYearBeforePeriodTotalTickets(lastYearBeforePeriodTickets,\r\n\t\tyearStartTime, endTime, col, allItems);\r\n\tdata.thisYearTotalResult = statisticThisYearTotalTickets(thisYearTotalTickets,\r\n\t\tyearStartTime, endTime, col, allItems);\r\n\tdata.beforePeriodNeedHandleResult = statisticBeforePeriodNeedHandleResult([\r\n\t\tdata.periodNewAddedResult, data.thisYearBeforePeriodResult,\r\n\t\tdata.lastYearBeforePeriodResult], allItems);\r\n\tdata.periodTotalResult = statisticPeriodTotalResult([\r\n\t\tdata.lastYearBeforePeriodTotalResult,\r\n\t\tdata.thisYearTotalResult\r\n\t], allItems);\r\n\tdata.rateResult = {};\r\n\tfor (let name of allItems) {\r\n\t\tdata.rateResult[name] = initRate();\r\n\t}\r\n\tstatisticRate(data.periodNewAddedResult, NEW_ADD_CLOSE_RATE, data.rateResult);\r\n\tstatisticRate(data.thisYearBeforePeriodResult, REMAIN_CLOSE_RATE, data.rateResult);\r\n\tstatisticRate(data.beforePeriodNeedHandleResult, OVERALL_CLOSE_RATE, data.rateResult);\r\n\tstatisticRate(data.beforePeriodNeedHandleResult, CLOSE_ON_TIME_RATE, data.rateResult);\r\n\tstatisticRate(data.periodTotalResult, TOTAL_OVERALL_CLOSE_RATE, data.rateResult);\r\n\r\n\treturn data;\r\n}\r\n\r\nexport const formatGraphData = (data, allItems) => {\r\n\tlet graphData = {\r\n\t\ttotalAcceptData: [],\r\n\t\toverallCloseRateData: [],\r\n\t\tnewAddedAcceptData: [],\r\n\t\tnewAddedCloseRateData: [],\r\n\t\tneedHandleAcceptData: [],\r\n\t\tneedHandleCloseOnTimeRateData: [],\r\n\t\tneedHandleCloseRateData: [],\r\n\t\topenData: [],\r\n\t\tcloseAverageHandleTimeData: [],\r\n\t\topenAverageHandleTimeData: []\r\n\t};\r\n\tfor (let name of allItems) {\r\n\t\tgraphData.totalAcceptData = [\r\n\t\t\t...graphData.totalAcceptData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.periodTotalResult[name][KEY_TICKET_TOTAL][TICKET_ACCEPT]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.overallCloseRateData = [\r\n\t\t\t...graphData.overallCloseRateData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.rateResult[name][KEY_TICKET_TOTAL][OVERALL_CLOSE_RATE]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.newAddedAcceptData = [\r\n\t\t\t...graphData.newAddedAcceptData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.periodNewAddedResult[name][KEY_TICKET_TOTAL][TICKET_ACCEPT]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.newAddedCloseRateData = [\r\n\t\t\t...graphData.newAddedCloseRateData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.rateResult[name][KEY_TICKET_TOTAL][NEW_ADD_CLOSE_RATE]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.needHandleAcceptData = [\r\n\t\t\t...graphData.needHandleAcceptData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.beforePeriodNeedHandleResult[name][KEY_TICKET_TOTAL][TICKET_ACCEPT]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.needHandleCloseOnTimeRateData = [\r\n\t\t\t...graphData.needHandleCloseOnTimeRateData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.rateResult[name][KEY_TICKET_TOTAL][CLOSE_ON_TIME_RATE]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.needHandleCloseRateData = [\r\n\t\t\t...graphData.needHandleCloseRateData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.rateResult[name][KEY_TICKET_TOTAL][OVERALL_CLOSE_RATE]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.closeAverageHandleTimeData = [\r\n\t\t\t...graphData.closeAverageHandleTimeData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.periodNewAddedResult[name][KEY_TICKET_TOTAL][TICKET_CLOSE_PROCESS_TIME]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.openAverageHandleTimeData = [\r\n\t\t\t...graphData.openAverageHandleTimeData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.periodNewAddedResult[name][KEY_TICKET_TOTAL][TICKET_OPEN_PROCESS_TIME]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.openData = [\r\n\t\t\t...graphData.openData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.periodTotalResult[name][KEY_TICKET_TOTAL][TICKET_OPEN]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\r\n\treturn graphData;\r\n}\r\n\r\nexport const formatCategoryGraphData = (data, allItems, area) => {\r\n\tlet graphData = {\r\n\t\ttotalAcceptData: [],\r\n\t\toverallCloseRateData: [],\r\n\t\tnewAddedAcceptData: [],\r\n\t\tnewAddedCloseRateData: [],\r\n\t\tneedHandleAcceptData: [],\r\n\t\tneedHandleCloseOnTimeRateData: [],\r\n\t\tneedHandleCloseRateData: [],\r\n\t\topenData: [],\r\n\t\tcloseAverageHandleTimeData: [],\r\n\t\topenAverageHandleTimeData: []\r\n\t};\r\n\tfor (let name of allItems) {\r\n\t\tgraphData.totalAcceptData = [\r\n\t\t\t...graphData.totalAcceptData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.periodTotalResult[area][name][TICKET_ACCEPT]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.overallCloseRateData = [\r\n\t\t\t...graphData.overallCloseRateData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.rateResult[area][name][OVERALL_CLOSE_RATE]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.newAddedAcceptData = [\r\n\t\t\t...graphData.newAddedAcceptData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.periodNewAddedResult[area][name][TICKET_ACCEPT]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.newAddedCloseRateData = [\r\n\t\t\t...graphData.newAddedCloseRateData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.rateResult[area][name][NEW_ADD_CLOSE_RATE]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.needHandleAcceptData = [\r\n\t\t\t...graphData.needHandleAcceptData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.beforePeriodNeedHandleResult[area][name][TICKET_ACCEPT]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.needHandleCloseOnTimeRateData = [\r\n\t\t\t...graphData.needHandleCloseOnTimeRateData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.rateResult[area][name][CLOSE_ON_TIME_RATE]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.needHandleCloseRateData = [\r\n\t\t\t...graphData.needHandleCloseRateData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.rateResult[area][name][OVERALL_CLOSE_RATE]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.closeAverageHandleTimeData = [\r\n\t\t\t...graphData.closeAverageHandleTimeData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.periodNewAddedResult[area][name][TICKET_CLOSE_PROCESS_TIME]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.openAverageHandleTimeData = [\r\n\t\t\t...graphData.openAverageHandleTimeData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.periodNewAddedResult[area][name][TICKET_OPEN_PROCESS_TIME]\r\n\t\t\t}\r\n\t\t];\r\n\t\tgraphData.openData = [\r\n\t\t\t...graphData.openData,\r\n\t\t\t{\r\n\t\t\t\tname: name,\r\n\t\t\t\tvalue: data.periodTotalResult[area][name][TICKET_OPEN]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\r\n\treturn graphData;\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport {\n\tKEY_REPORT_TIME,\n\tCOL_PROJECT_STAGE,\n\tCOL_PROJECT,\n\tCOL_CITY_COMPANY,\n\tCOL_AREA,\n\tCOL_REPORT_TIME,\n\tCATEGORIES,\n\tCOL_DUTY_WORKER\n} from './constants';\n\nimport { Row, Col, Tabs } from 'antd';\nimport DataForm from './components/DataForm';\nimport ChartView from './components/ChartView';\nimport ProjectView from './components/ProjectView';\n\nimport {\n\treadExcelData\n} from './utils';\n\nimport { connect } from 'react-redux';\nimport { addCategories } from './store/actions';\n\nimport * as Util from './functions/utils';\n\nimport MainView from './components/MainView';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tstageGraphData: {},\n\t\t\tcityGraphData: {},\n\t\t\tprojectGraphData: {},\n\t\t\tareaGraphData: {},\n\t\t\tcategoryGraphData: {}\n\t\t}\n\t}\n\n\tstart = (fileList, startTime, endTime) => {\n\t\tconst { addCategories } = this.props;\n\t\tthis.setState({ loading: true });\n\t\treadExcelData(fileList).then((data) => {\n\t\t\tlet allStages = [], allProjects = [], allCities = [], allAreas = [], allWorkers = [];\n\t\t\t// get all categories and ticket states\n\t\t\tfor (let ticket of data) {\n\t\t\t\t// get all stages\n\t\t\t\tlet stage = Util.getItem(ticket[COL_PROJECT_STAGE]);\n\t\t\t\tif (allStages.indexOf(stage) === -1) {\n\t\t\t\t\tallStages = [\n\t\t\t\t\t\t...allStages,\n\t\t\t\t\t\tstage\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\t// get all projects\n\t\t\t\tlet project = Util.getItem(ticket[COL_PROJECT]);\n\t\t\t\tif (allProjects.indexOf(project) === -1) {\n\t\t\t\t\tallProjects = [\n\t\t\t\t\t\t...allProjects,\n\t\t\t\t\t\tproject\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\t// get all cities\n\t\t\t\tlet city = Util.getItem(ticket[COL_CITY_COMPANY]);\n\t\t\t\tif (allCities.indexOf(city) === -1) {\n\t\t\t\t\tallCities = [\n\t\t\t\t\t\t...allCities,\n\t\t\t\t\t\tcity\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\t// get all area\n\t\t\t\tlet area = Util.getItem(ticket[COL_AREA]);\n\t\t\t\tif (allAreas.indexOf(area) === -1) {\n\t\t\t\t\tallAreas = [\n\t\t\t\t\t\t...allAreas,\n\t\t\t\t\t\tarea\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\t// get all workers\n\t\t\t\tlet worker = Util.getItem(ticket[COL_DUTY_WORKER]);\n\t\t\t\tif (allWorkers.indexOf(worker) === -1) {\n\t\t\t\t\tallWorkers = [\n\t\t\t\t\t\t...allWorkers,\n\t\t\t\t\t\tworker\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet allCategories = CATEGORIES;\n\n\t\t\tthis.setState({\n\t\t\t\tallStages,\n\t\t\t\tallProjects,\n\t\t\t\tallCities,\n\t\t\t\tallAreas,\n\t\t\t\tallCategories,\n\t\t\t\tallWorkers\n\t\t\t});\n\n\t\t\taddCategories(allCategories);\n\n\t\t\tlet yearStartTime = moment(startTime).set({ month: 0, date: 1, hour: 0, minute: 0, second: 0 });\n\t\t\tlet periodTickets = data.filter(ticket => {\n\t\t\t\tlet ticketReportTime = moment(ticket[COL_REPORT_TIME]);\n\t\t\t\treturn ticketReportTime >= startTime && ticketReportTime <= endTime;\n\t\t\t});\n\t\t\tlet beforePeriodTickets = data.filter(ticket => {\n\t\t\t\tlet ticketReportTime = moment(ticket[COL_REPORT_TIME]);\n\t\t\t\treturn ticketReportTime >= yearStartTime && ticketReportTime < startTime;\n\t\t\t});\n\t\t\tlet thisYearTotalTickets = data.filter((ticket) => {\n\t\t\t\tlet reportTime = moment(ticket[KEY_REPORT_TIME]);\n\t\t\t\treturn reportTime <= endTime && reportTime >= yearStartTime;\n\t\t\t});\n\t\t\tlet lastYearBeforePeriodTickets = data.filter(ticket => {\n\t\t\t\tlet ticketReportTime = moment(ticket[COL_REPORT_TIME]);\n\t\t\t\treturn ticketReportTime < yearStartTime\n\t\t\t});\n\n\t\t\t// 统计负责维保工程师\n\t\t\tlet workerData = Util.statistc(periodTickets, beforePeriodTickets, thisYearTotalTickets,\n\t\t\t\tlastYearBeforePeriodTickets, startTime, endTime, COL_DUTY_WORKER, allWorkers);\n\t\t\tthis.setState({\n\t\t\t\tworkerData\n\t\t\t});\n\n\t\t\t// 统计分期\n\t\t\tlet stageData = Util.statistc(periodTickets, beforePeriodTickets, thisYearTotalTickets,\n\t\t\t\tlastYearBeforePeriodTickets, startTime, endTime, COL_PROJECT_STAGE, allStages)\n\t\t\tthis.setState({\n\t\t\t\tstageData\n\t\t\t});\n\n\t\t\t// 统计项目\n\t\t\tlet projectData = Util.statistc(periodTickets, beforePeriodTickets, thisYearTotalTickets,\n\t\t\t\tlastYearBeforePeriodTickets, startTime, endTime, COL_PROJECT, allProjects)\n\t\t\tthis.setState({\n\t\t\t\tprojectData\n\t\t\t});\n\n\t\t\t// 统计城市\n\t\t\tlet cityData = Util.statistc(periodTickets, beforePeriodTickets, thisYearTotalTickets,\n\t\t\t\tlastYearBeforePeriodTickets, startTime, endTime, COL_CITY_COMPANY, allCities)\n\t\t\tthis.setState({\n\t\t\t\tcityData\n\t\t\t});\n\n\t\t\t// 统计大区\n\t\t\tlet areaData = Util.statistc(periodTickets, beforePeriodTickets, thisYearTotalTickets,\n\t\t\t\tlastYearBeforePeriodTickets, startTime, endTime, COL_AREA, allAreas)\n\t\t\tthis.setState({\n\t\t\t\tareaData\n\t\t\t});\n\n\t\t\t// 画图\n\t\t\tlet stageGraphData = Util.formatGraphData(stageData, allStages);\n\t\t\tthis.setState({\n\t\t\t\tstageGraphData\n\t\t\t})\n\n\t\t\tlet projectGraphData = Util.formatGraphData(projectData, allProjects);\n\t\t\tthis.setState({\n\t\t\t\tprojectGraphData\n\t\t\t});\n\n\t\t\tlet cityGraphData = Util.formatGraphData(cityData, allCities);\n\t\t\tthis.setState({\n\t\t\t\tcityGraphData\n\t\t\t});\n\n\t\t\tlet areaGraphData = Util.formatGraphData(areaData, allAreas);\n\t\t\tthis.setState({\n\t\t\t\tareaGraphData\n\t\t\t});\n\n\t\t\t// 统计分类分布图\n\t\t\tlet categoryGraphData = Util.formatCategoryGraphData(areaData, allCategories, allAreas[0]);\n\t\t\tthis.setState({\n\t\t\t\tcategoryGraphData\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tloading: false\n\t\t\t});\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2 className=\"text--center heading\">投诉统计</h2>\n\t\t\t\t<DataForm\n\t\t\t\t\tonStart={this.start}\n\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t/>\n\t\t\t\t<Row style={{ margin: '40px 0' }}>\n\t\t\t\t\t<Col span={22} offset={1}>\n\t\t\t\t\t\t<Tabs type=\"card\">\n\t\t\t\t\t\t\t<Tabs.TabPane tab=\"统计图\" key=\"统计图\">\n\t\t\t\t\t\t\t\t<ChartView\n\t\t\t\t\t\t\t\t\tstageGraphData={this.state.stageGraphData}\n\t\t\t\t\t\t\t\t\tprojectGraphData={this.state.projectGraphData}\n\t\t\t\t\t\t\t\t\tcityGraphData={this.state.cityGraphData}\n\t\t\t\t\t\t\t\t\tareaGraphData={this.state.areaGraphData}\n\t\t\t\t\t\t\t\t\tcategoryGraphData={this.state.categoryGraphData}\n\t\t\t\t\t\t\t\t\tallStages={this.state.allStages}\n\t\t\t\t\t\t\t\t\tallProjects={this.state.allProjects}\n\t\t\t\t\t\t\t\t\tallCities={this.state.allCities}\n\t\t\t\t\t\t\t\t\tallAreas={this.state.allAreas}\n\t\t\t\t\t\t\t\t\tallCategories={this.state.allCategories}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t\t\t<Tabs.TabPane tab=\"大区\" key=\"大区\">\n\t\t\t\t\t\t\t\t<ProjectView\n\t\t\t\t\t\t\t\t\tdata={this.state.areaData}\n\t\t\t\t\t\t\t\t\tprojects={this.state.allAreas}\n\t\t\t\t\t\t\t\t\tname=\"大区\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t\t\t<Tabs.TabPane tab=\"城市\" key=\"城市\">\n\t\t\t\t\t\t\t\t<ProjectView\n\t\t\t\t\t\t\t\t\tdata={this.state.cityData}\n\t\t\t\t\t\t\t\t\tprojects={this.state.allCities}\n\t\t\t\t\t\t\t\t\tname=\"城市\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t\t\t<Tabs.TabPane tab=\"项目\" key=\"项目\">\n\t\t\t\t\t\t\t\t<ProjectView\n\t\t\t\t\t\t\t\t\tdata={this.state.projectData}\n\t\t\t\t\t\t\t\t\tprojects={this.state.allProjects}\n\t\t\t\t\t\t\t\t\tname=\"项目\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t\t\t<Tabs.TabPane tab=\"分期\" key=\"分期\">\n\t\t\t\t\t\t\t\t<ProjectView\n\t\t\t\t\t\t\t\t\tdata={this.state.stageData}\n\t\t\t\t\t\t\t\t\tprojects={this.state.allStages}\n\t\t\t\t\t\t\t\t\tname=\"项目分期\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t\t\t<Tabs.TabPane tab=\"责任人\" key=\"责任人\">\n\t\t\t\t\t\t\t\t<ProjectView\n\t\t\t\t\t\t\t\t\tdata={this.state.workerData}\n\t\t\t\t\t\t\t\t\tprojects={this.state.allWorkers}\n\t\t\t\t\t\t\t\t\tname=\"责任人\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\taddCategories,\n}\n\nconst ConnectedApp = connect(null, mapDispatchToProps)(App);\n\nexport default ConnectedApp;\n","import {\r\n  ADD_CATEGORY,\r\n  ADD_CATEGORIES\r\n} from '../action-types';\r\n\r\nexport const addCategory = category => ({\r\n  type: ADD_CATEGORY,\r\n  payload: {\r\n    category\r\n  }\r\n});\r\n\r\nexport const addCategories = categories => ({\r\n  type: ADD_CATEGORIES,\r\n  payload: {\r\n    categories\r\n  }\r\n});\r\n","export const ADD_CATEGORY = 'ADD_CATEGORY';\r\nexport const ADD_CATEGORIES = 'ADD_CATEGORIES';\r\nexport const ADD_AREAS = 'ADD_AREAS';\r\n","import { combineReducers } from 'redux';\r\nimport allCategories from './all-categories';\r\nimport allAreas from './all-areas';\r\n\r\nconst reducer = combineReducers({\r\n  allCategories,\r\n  allAreas\r\n});\r\n\r\nexport default reducer;\r\n","import {\r\n  ADD_CATEGORY,\r\n  ADD_CATEGORIES\r\n} from '../action-types';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_CATEGORY:\r\n      const { category } = action.payload;\r\n      return [\r\n        ...state,\r\n        category\r\n      ];\r\n    case ADD_CATEGORIES:\r\n      const { categories } = action.payload;\r\n      return [\r\n        ...state,\r\n        ...categories\r\n      ]\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_AREAS\r\n} from '../action-types';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_AREAS:\r\n      const { areas } = action.payload;\r\n      return [\r\n        ...state,\r\n        areas\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { LocaleProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <LocaleProvider locale={zh_CN}>\n      <App />\n    </LocaleProvider>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}